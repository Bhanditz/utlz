import gzip
import hashlib
import random
import sys
from os.path import join, dirname
from tempfile import NamedTemporaryFile

import utlz
from utlz import flo


def test_flo():
    foo = 'AAA'
    bar = 'Bbb'
    baz = 'ccc'

    assert utlz.flo('{foo}.{bar}.{baz}') == 'AAA.Bbb.ccc'

    long_ = '{foo}.{bar}.{baz}'.format(**locals())
    assert utlz.flo('{foo}.{bar}.{baz}') == long_

    very_long = '{foo}.{bar}.{baz}'.format(foo=foo, bar=bar, baz=baz)
    assert utlz.flo('{foo}.{bar}.{baz}') == very_long


def test_load_json():
    # normal mode
    filename = join(dirname(__file__), 'data', 'test_load_json', 'data.json')
    data_is = utlz.load_json(filename)
    data_must = ['aa', {'a': {'k1': [1, 2, 3], 'k2': 'value'}, 'b': 'bbb'}, 333]
    assert data_is == data_must

    # gzip_mode
    filename = join(dirname(__file__), 'data', 'test_load_json', 'data.json.gz')
    data_is = utlz.load_json(filename, gzip_mode=True)
    data_must = ['aa', {'a': {'k1': [1, 2, 3], 'k2': 'value'}, 'b': 'bbb'}, 333]
    assert data_is == data_must


def test_write_json():
    test_data = [  # (<data_in>, <data_must>, <from_file_must>), ...
        (
            ['aa', {'a': {'k1': [1, 2, 3], 'k2': 'val'}, 'b': 'bbb'}, 333],
            ['aa', {'a': {'k1': [1, 2, 3], 'k2': 'val'}, 'b': 'bbb'}, 333],
            '["aa", {"a": {"k1": [1, 2, 3], "k2": "val"}, "b": "bbb"}, 333]',
        ),
        (
            ['aa', {'a': {'k2': 'val', 'k1': [1, 2, 3]}, 'b': 'bbb'}, 333],
            ['aa', {'a': {'k1': [1, 2, 3], 'k2': 'val'}, 'b': 'bbb'}, 333],
            '["aa", {"a": {"k1": [1, 2, 3], "k2": "val"}, "b": "bbb"}, 333]',
        ),
    ]

    # normal mode
    for data_in, data_must, from_file_must in test_data:
        with NamedTemporaryFile() as tmpf:
            utlz.write_json(data_in, tmpf.name)
            tmpf.seek(0)
            data_is = utlz.load_json(tmpf.name)
            tmpf.seek(0)
            from_file = tmpf.read().decode('utf-8')
            assert data_is == data_must
            assert from_file == from_file_must

    # gzip mode
    for data_in, data_must, from_file_must in test_data:
        with NamedTemporaryFile() as tmpf:
            utlz.write_json(data_in, tmpf.name, gzip_mode=True)
            tmpf.seek(0)
            data_is = utlz.load_json(tmpf.name, gzip_mode=True)
            tmpf.seek(0)
            assert data_is == data_must
            # skip test on Python-2.x
            if sys.version_info >= (3,0):
                from_file = gzip.decompress(tmpf.read()).decode('utf-8')
                assert from_file == from_file_must


def test_flat_list():
    assert utlz.flat_list([[1, 2], [3, 4, 5], [6]]) == [1, 2, 3, 4, 5, 6]


def test_text_with_newlines():
    prefix = 'This is a "very" long string which is longer than 78 chars.  '
    middle = 'Really, it has 79'
    postfx = '.'
    long_text = prefix + middle + postfx
    assert utlz.text_with_newlines(long_text) == prefix + middle + '\n' + postfx
    assert utlz.text_with_newlines(long_text, line_length=79) == long_text
    assert utlz.text_with_newlines(long_text, line_length=80) == long_text
    assert utlz.text_with_newlines(long_text, line_length=900) == long_text
    assert utlz.text_with_newlines(long_text, line_length=0) == long_text
    special_newline = prefix + middle + '\r\n' + postfx
    assert utlz.text_with_newlines(long_text, newline='\r\n') == special_newline

    # b64 encoded tls certificate of jornaiserevistas.com
    really_long_text = 'MIK8VjCCuz6gAwIBAgIFAjmqLU4wDQYJKoZIhvcNAQELBQAwHzEdMBsGA1UEAwwUd29ybGRwcmVzc3RpdGxlcy5jb20wHhcNMTcwMTMxMTEzNDU3WhcNMTgwMTMxMTEzNDU3WjAfMR0wGwYDVQQDDBR3b3JsZHByZXNzdGl0bGVzLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANOqhKXFuVilg6wa5yRz4cWqpQdM/9wS8we45UhsuGre9Me52VCQczYVwp5zz9UwXVFEl1nhfzK4MdakorIdUkPKrEFBAp20U553UYKJiqsys7pY6Ug6W9B+bqTaZmooaz8VTFJyo4RCN1dji+bNprUSWoKOIYifDFWTgl6oWNmiNT7fKuUI+avHCDXU0qOYRqN6po0QF6ffLAdv2W9sskm8LywokHwTPn1/BxJhNQmuM+c0k/qPT89xgAZ6XJ8SFP6I+HmhuffvFjh4YdVjP5TWZE9xQja9SecB3bmVOWjqEng6J+X2yyW0le+sltxZ8w+9odm22CrO+GX5hVnspo0CAwEAAaOCuZcwgrmTMB0GA1UdDgQWBBRsfbFL6dGsQDfU7s/ReyH0KGqtmzAfBgNVHSMEGDAWgBRsfbFL6dGsQDfU7s/ReyH0KGqtmzAJBgNVHRMEAjAAMIK5RAYDVR0RBIK5OzCCuTeCFHdvcmxkcHJlc3N0aXRsZXMuY29tghxha2hhYmFhcmVlbmF1cnBhdHJpa2FlZW4uY29tghRha2hiYXJkYW5tYWphbGFoLmNvbYIPYWxsbWVkaWEtYXUuY29tghFhbGxtZWRpYS1iZWZyLmNvbYIRYWxsbWVkaWEtYmVubC5jb22CD2FsbG1lZGlhLWVzLmNvbYITYWxsbWVkaWFuZXdzLXN3LmNvbYIQYWxsbmV3cy1iZWZyLmNvbYIQYWxsbmV3cy1iZW5sLmNvbYIgYXVzdHJhbGlhbnByZXNzdGl0bGVzLWNlbnRlci5jb22CGWF1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CHWF1c3RyYWxpYW5wcmVzc3RpdGxlc2FyZWEuY29tghthdXN0cmFsaWFucHJlc3N0aXRsZXNhdS5jb22CHWF1c3RyYWxpYW5wcmVzc3RpdGxlc2luZm8uY29tgh1hdXN0cmFsaWFucHJlc3N0aXRsZXNtYWlsLmNvbYIcYXVzdHJhbGlhbnByZXNzdGl0bGVzbmV0LmNvbYIdYXVzdHJhbGlhbnByZXNzdGl0bGVzbmV3cy5jb22CH2F1c3RyYWxpYW5wcmVzc3RpdGxlc29ubGluZS5jb22CHWF1c3RyYWxpYW5wcmVzc3RpdGxlc3Bvc3QuY29tgh5hdXN0cmFsaWFucHJlc3N0aXRsZXN0b2RheS5jb22CIGF1c3RyYWxpYW5wcmVzc3RpdGxlc3VwZGF0ZXMuY29tgh1hdXN0cmFsaWFucHJlc3N0aXRsZXN6b25lLmNvbYINYXZpc2VyLWRrLmNvbYIYYXZpc2Vyb2dibGFkZS1jZW50ZXIuY29tghRhdmlzZXJvZ2JsYWRlLWRrLmNvbYIXYXZpc2Vyb2dibGFkZS13b3JsZC5jb22CFmF2aXNlcm9nYmxhZGUtem9uZS5jb22CEWF2aXNlcm9nYmxhZGUuY29tghdhdmlzZXJvZ2JsYWRlY2VudGVyLmNvbYIVYXZpc2Vyb2dibGFkZWZsZXguY29tghVhdmlzZXJvZ2JsYWRlaW5mby5jb22CHmF2aXNlcm9nYmxhZGVrb21tdW5pa2F0aW9uLmNvbYIUYXZpc2Vyb2dibGFkZW1hZy5jb22CFmF2aXNlcm9nYmxhZGVtZWRpYS5jb22CFGF2aXNlcm9nYmxhZGVuZXcuY29tghVhdmlzZXJvZ2JsYWRlcG9zdC5jb22CGGF2aXNlcm9nYmxhZGVwcmVtaXVtLmNvbYIZYXZpc2Vyb2dibGFkZXItY2VudGVyLmNvbYIXYXZpc2Vyb2dibGFkZXItem9uZS5jb22CEmF2aXNlcm9nYmxhZGVyLmNvbYIWYXZpc2Vyb2dibGFkZXJmbGV4LmNvbYIVYXZpc2Vyb2dibGFkZXJtYWcuY29tghdhdmlzZXJvZ2JsYWRlcm1lZGlhLmNvbYIYYXZpc2Vyb2dibGFkZXJvbmxpbmUuY29tghZhdmlzZXJvZ2JsYWRlcnBvc3QuY29tghlhdmlzZXJvZ2JsYWRlcnVwZGF0ZXMuY29tghVhdmlzZXJvZ2JsYWRlcndlYi5jb22CFWF2aXNlcm9nYmxhZGVzaXRlLmNvbYIXYXZpc2Vyb2dibGFkZXN0YXRpYy5jb22CFWNhbmFkYXByZXNzdGl0bGVzLmNvbYIPY2FwYXNicmF6aWwuY29tgh9jb2R6aWVubmllZ2F6ZXR5aWN6YXNvcGlzbWEuY29tghdjb3ZlcnRpdHJlc2RlcHJlc3NlLmNvbYIZY292ZXJ0aXRyZXNkZXByZXNzZW5sLmNvbYIjZGFnZWxpamtza3JhbnRlbmVudGlqZHNjaHJpZnRlbi5jb22CHWRhZ2tyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgh5kYWlseWF1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CHGRheWF1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CFWRheWdhemV0eXpodXJuYWx5LmNvbYIiZGUtZnB6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYISZGVjbG91ZGNvbnRlbnQuY29tgiJkZWZwLXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiFkZWZwemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CImRlaW5lemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CJmRlbWFpbC1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiVkZW1haWxmcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiZkZW5ld3MtZnB6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYInZGVwcmVzcy1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiFkaWdpemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CF2RrLWF2aXNlcm9nYmxhZGUtZnAuY29tghVka2ZwYXZpc2Vyb2dibGFkZS5jb22CHWR6aWVubmlrZ2F6ZXR5aWN6YXNvcGlzbWEuY29tghllbmxpZ25ldGl0cmVzZGVwcmVzc2UuY29tghtlbmxpZ25ldGl0cmVzZGVwcmVzc2Vmci5jb22CIGZvcnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghNnYXpldGljemFzb3Bpc20uY29tghxnYXpldHlpY3phc29waXNtYS1jZW50ZXIuY29tghxnYXpldHlpY3phc29waXNtYS1vbmxpbmUuY29tghhnYXpldHlpY3phc29waXNtYS1wbC5jb22CFWdhemV0eWljemFzb3Bpc21hLmNvbYIZZ2F6ZXR5aWN6YXNvcGlzbWFmbGV4LmNvbYIZZ2F6ZXR5aWN6YXNvcGlzbWFpbmZvLmNvbYIYZ2F6ZXR5aWN6YXNvcGlzbWFtYWcuY29tghtnYXpldHlpY3phc29waXNtYW9ubGluZS5jb22CF2dhemV0eWljemFzb3Bpc21hcGwuY29tghpnYXpldHlpY3phc29waXNtYXBsYWNlLmNvbYIZZ2F6ZXR5aWN6YXNvcGlzbWFwb3N0LmNvbYIcZ2F6ZXR5aWN6YXNvcGlzbWFzcG90LXBsLmNvbYIYZ2F6ZXR5aWN6YXNvcGlzbWF3ZWIuY29tghxnYXpldHlpY3phc29waXNtYXpvbmUtcGwuY29tghlnYXpldHlpY3phc29waXNtYXpvbmUuY29tghpnYXpldHlpemh1cm5hbHktY2VudGVyLmNvbYIYZ2F6ZXR5aXpodXJuYWx5LWluZm8uY29tghZnYXpldHlpemh1cm5hbHktcnUuY29tghNnYXpldHlpemh1cm5hbHkuY29tghdnYXpldHlpemh1cm5hbHlpbmZvLmNvbYIWZ2F6ZXR5aXpodXJuYWx5bmV0LmNvbYIWZ2F6ZXR5aXpodXJuYWx5bmV3LmNvbYIZZ2F6ZXR5aXpodXJuYWx5b25saW5lLmNvbYIXZ2F6ZXR5aXpodXJuYWx5cG9zdC5jb22CFmdhemV0eWl6aHVybmFseXdlYi5jb22CFmdhemV0eXpodXJuYWx5aW5mby5jb22CFWhlbGxhc3ByZXNzdGl0bGVzLmNvbYIiaGV1dGV6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIaaGlybGFwb2tlc2Fmb2x5b2lyYXRvay5jb22CEWhrcHJlc3N0aXRsZXMuY29tghNpbXByZW5zYS1jZW50ZXIuY29tghJpbXByZW5zYS1mbGFzaC5jb22CDGltcHJlbnNhLmNvbYIQaW1wcmVuc2FhcmVhLmNvbYIUaW1wcmVuc2FicmF6aWxoZC5jb22CFGltcHJlbnNhYnJhemlsaHEuY29tghZpbXByZW5zYWJyYXppbGluZm8uY29tghZpbXByZW5zYWJyYXppbGxpc3QuY29tghBpbXByZW5zYWJyaHEuY29tghJpbXByZW5zYWJyaW5mby5jb22CEmltcHJlbnNhYnJzaXRlLmNvbYIRaW1wcmVuc2FmaXJzdC5jb22CEWltcHJlbnNhZmxhc2guY29tghBpbXByZW5zYWZsZXguY29tghFpbXByZW5zYWZyZXNoLmNvbYIQaW1wcmVuc2Fob2plLmNvbYIOaW1wcmVuc2FocS5jb22CEGltcHJlbnNhaW5mby5jb22CEWltcHJlbnNhbG9jYWwuY29tgg9pbXByZW5zYW1hZy5jb22CD2ltcHJlbnNhbmV0LmNvbYIQaW1wcmVuc2FuZXdzLmNvbYISaW1wcmVuc2FvbmxpbmUuY29tghBpbXByZW5zYXNwb3QuY29tgg9pbXByZXNhbmV3cy5jb22CHGluZm9ybWF0aWZ0aXRyZXNkZXByZXNzZS5jb22CH2ludGVybmVjaWVnYXpldHlpY3phc29waXNtYS5jb22CIWludGVybmV0b3dlamdhemV0eWljemFzb3Bpc21hLmNvbYIUaXJpc2hwcmVzc3RpdGxlcy5jb22CFmlzcmFlbGlwcmVzc3RpdGxlcy5jb22CFGpvcm5haXMtcmV2aXN0YXMuY29tghtqb3JuYWlzZXJldmlzdGFzLWNlbnRlci5jb22CG2pvcm5haXNlcmV2aXN0YXMtcG9ydGFsLmNvbYIXam9ybmFpc2VyZXZpc3Rhcy1wdC5jb22CGGpvcm5haXNlcmV2aXN0YXMtd2ViLmNvbYIUam9ybmFpc2VyZXZpc3Rhcy5jb22CF2pvcm5haXNlcmV2aXN0YXNtYWcuY29tghlqb3JuYWlzZXJldmlzdGFzbWVkaWEuY29tghhqb3JuYWlzZXJldmlzdGFzbmV3cy5jb22CGmpvcm5haXNlcmV2aXN0YXNvbmxpbmUuY29tghlqb3JuYWlzZXJldmlzdGFzcGxhY2UuY29tghhqb3JuYWlzZXJldmlzdGFzcG9zdC5jb22CGGpvcm5haXNlcmV2aXN0YXN6b25lLmNvbYISam9ybmFpc25ld3MtYnIuY29tghNqb3JuYWlzcmV2aXN0YXMuY29tghdqb3VybmF1eGV0bWFnYXppbmVzLmNvbYIbam91cm5hdXhldG1hZ2F6aW5lc2ZsZXguY29tghBrYXR0ZWV0c3VvbWkuY29tghNrb3JhbmRhbm1hamFsYWguY29tgiFrcmFudGVuZW50aWpkc2NocmlmdGVuLWNlbnRlci5jb22CHWtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4tbmwuY29tghprcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIga3JhbnRlbmVudGlqZHNjaHJpZnRlbmFnZW5jeS5jb22CIGtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5kZWtzZWwuY29tgh5rcmFudGVuZW50aWpkc2NocmlmdGVuam91dy5jb22CHWtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5tYWcuY29tgh1rcmFudGVuZW50aWpkc2NocmlmdGVubmV0LmNvbYIia3JhbnRlbmVudGlqZHNjaHJpZnRlbm5ld2NvdmVyLmNvbYIga3JhbnRlbmVudGlqZHNjaHJpZnRlbm5pZXV3cy5jb22CIGtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5ubG5ld3MuY29tgh5rcmFudGVuZW50aWpkc2NocmlmdGVucG9zdC5jb22CEG1hZ2FzaW5lci1uby5jb22CIW1haWwuYWtoYWJhYXJlZW5hdXJwYXRyaWthZWVuLmNvbYIZbWFpbC5ha2hiYXJkYW5tYWphbGFoLmNvbYIUbWFpbC5hbGxtZWRpYS1hdS5jb22CFm1haWwuYWxsbWVkaWEtYmVmci5jb22CFm1haWwuYWxsbWVkaWEtYmVubC5jb22CFG1haWwuYWxsbWVkaWEtZXMuY29tghhtYWlsLmFsbG1lZGlhbmV3cy1zdy5jb22CFW1haWwuYWxsbmV3cy1iZWZyLmNvbYIVbWFpbC5hbGxuZXdzLWJlbmwuY29tgiVtYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlcy1jZW50ZXIuY29tgh5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CIm1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzYXJlYS5jb22CIG1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzYXUuY29tgiJtYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc2luZm8uY29tgiJtYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc21haWwuY29tgiFtYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc25ldC5jb22CIm1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzbmV3cy5jb22CJG1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzb25saW5lLmNvbYIibWFpbC5hdXN0cmFsaWFucHJlc3N0aXRsZXNwb3N0LmNvbYIjbWFpbC5hdXN0cmFsaWFucHJlc3N0aXRsZXN0b2RheS5jb22CJW1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzdXBkYXRlcy5jb22CIm1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzem9uZS5jb22CEm1haWwuYXZpc2VyLWRrLmNvbYIdbWFpbC5hdmlzZXJvZ2JsYWRlLWNlbnRlci5jb22CGW1haWwuYXZpc2Vyb2dibGFkZS1kay5jb22CHG1haWwuYXZpc2Vyb2dibGFkZS13b3JsZC5jb22CG21haWwuYXZpc2Vyb2dibGFkZS16b25lLmNvbYIWbWFpbC5hdmlzZXJvZ2JsYWRlLmNvbYIcbWFpbC5hdmlzZXJvZ2JsYWRlY2VudGVyLmNvbYIabWFpbC5hdmlzZXJvZ2JsYWRlZmxleC5jb22CGm1haWwuYXZpc2Vyb2dibGFkZWluZm8uY29tgiNtYWlsLmF2aXNlcm9nYmxhZGVrb21tdW5pa2F0aW9uLmNvbYIZbWFpbC5hdmlzZXJvZ2JsYWRlbWFnLmNvbYIbbWFpbC5hdmlzZXJvZ2JsYWRlbWVkaWEuY29tghltYWlsLmF2aXNlcm9nYmxhZGVuZXcuY29tghptYWlsLmF2aXNlcm9nYmxhZGVwb3N0LmNvbYIdbWFpbC5hdmlzZXJvZ2JsYWRlcHJlbWl1bS5jb22CHm1haWwuYXZpc2Vyb2dibGFkZXItY2VudGVyLmNvbYIcbWFpbC5hdmlzZXJvZ2JsYWRlci16b25lLmNvbYIXbWFpbC5hdmlzZXJvZ2JsYWRlci5jb22CG21haWwuYXZpc2Vyb2dibGFkZXJmbGV4LmNvbYIabWFpbC5hdmlzZXJvZ2JsYWRlcm1hZy5jb22CHG1haWwuYXZpc2Vyb2dibGFkZXJtZWRpYS5jb22CHW1haWwuYXZpc2Vyb2dibGFkZXJvbmxpbmUuY29tghttYWlsLmF2aXNlcm9nYmxhZGVycG9zdC5jb22CHm1haWwuYXZpc2Vyb2dibGFkZXJ1cGRhdGVzLmNvbYIabWFpbC5hdmlzZXJvZ2JsYWRlcndlYi5jb22CGm1haWwuYXZpc2Vyb2dibGFkZXNpdGUuY29tghxtYWlsLmF2aXNlcm9nYmxhZGVzdGF0aWMuY29tghptYWlsLmNhbmFkYXByZXNzdGl0bGVzLmNvbYIUbWFpbC5jYXBhc2JyYXppbC5jb22CJG1haWwuY29kemllbm5pZWdhemV0eWljemFzb3Bpc21hLmNvbYIcbWFpbC5jb3ZlcnRpdHJlc2RlcHJlc3NlLmNvbYIebWFpbC5jb3ZlcnRpdHJlc2RlcHJlc3NlbmwuY29tgihtYWlsLmRhZ2VsaWprc2tyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgiJtYWlsLmRhZ2tyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgiNtYWlsLmRhaWx5YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIhbWFpbC5kYXlhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tghptYWlsLmRheWdhemV0eXpodXJuYWx5LmNvbYInbWFpbC5kZS1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghdtYWlsLmRlY2xvdWRjb250ZW50LmNvbYInbWFpbC5kZWZwLXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiZtYWlsLmRlZnB6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYInbWFpbC5kZWluZXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgittYWlsLmRlbWFpbC1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiptYWlsLmRlbWFpbGZwemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CK21haWwuZGVuZXdzLWZwemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CLG1haWwuZGVwcmVzcy1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiZtYWlsLmRpZ2l6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIcbWFpbC5kay1hdmlzZXJvZ2JsYWRlLWZwLmNvbYIabWFpbC5ka2ZwYXZpc2Vyb2dibGFkZS5jb22CIm1haWwuZHppZW5uaWtnYXpldHlpY3phc29waXNtYS5jb22CHm1haWwuZW5saWduZXRpdHJlc2RlcHJlc3NlLmNvbYIgbWFpbC5lbmxpZ25ldGl0cmVzZGVwcmVzc2Vmci5jb22CJW1haWwuZm9yemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CGG1haWwuZ2F6ZXRpY3phc29waXNtLmNvbYIhbWFpbC5nYXpldHlpY3phc29waXNtYS1jZW50ZXIuY29tgiFtYWlsLmdhemV0eWljemFzb3Bpc21hLW9ubGluZS5jb22CHW1haWwuZ2F6ZXR5aWN6YXNvcGlzbWEtcGwuY29tghptYWlsLmdhemV0eWljemFzb3Bpc21hLmNvbYIebWFpbC5nYXpldHlpY3phc29waXNtYWZsZXguY29tgh5tYWlsLmdhemV0eWljemFzb3Bpc21haW5mby5jb22CHW1haWwuZ2F6ZXR5aWN6YXNvcGlzbWFtYWcuY29tgiBtYWlsLmdhemV0eWljemFzb3Bpc21hb25saW5lLmNvbYIcbWFpbC5nYXpldHlpY3phc29waXNtYXBsLmNvbYIfbWFpbC5nYXpldHlpY3phc29waXNtYXBsYWNlLmNvbYIebWFpbC5nYXpldHlpY3phc29waXNtYXBvc3QuY29tgiFtYWlsLmdhemV0eWljemFzb3Bpc21hc3BvdC1wbC5jb22CHW1haWwuZ2F6ZXR5aWN6YXNvcGlzbWF3ZWIuY29tgiFtYWlsLmdhemV0eWljemFzb3Bpc21hem9uZS1wbC5jb22CHm1haWwuZ2F6ZXR5aWN6YXNvcGlzbWF6b25lLmNvbYIfbWFpbC5nYXpldHlpemh1cm5hbHktY2VudGVyLmNvbYIdbWFpbC5nYXpldHlpemh1cm5hbHktaW5mby5jb22CG21haWwuZ2F6ZXR5aXpodXJuYWx5LXJ1LmNvbYIYbWFpbC5nYXpldHlpemh1cm5hbHkuY29tghxtYWlsLmdhemV0eWl6aHVybmFseWluZm8uY29tghttYWlsLmdhemV0eWl6aHVybmFseW5ldC5jb22CG21haWwuZ2F6ZXR5aXpodXJuYWx5bmV3LmNvbYIebWFpbC5nYXpldHlpemh1cm5hbHlvbmxpbmUuY29tghxtYWlsLmdhemV0eWl6aHVybmFseXBvc3QuY29tghttYWlsLmdhemV0eWl6aHVybmFseXdlYi5jb22CG21haWwuZ2F6ZXR5emh1cm5hbHlpbmZvLmNvbYIabWFpbC5oZWxsYXNwcmVzc3RpdGxlcy5jb22CJ21haWwuaGV1dGV6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIfbWFpbC5oaXJsYXBva2VzYWZvbHlvaXJhdG9rLmNvbYIWbWFpbC5oa3ByZXNzdGl0bGVzLmNvbYIYbWFpbC5pbXByZW5zYS1jZW50ZXIuY29tghdtYWlsLmltcHJlbnNhLWZsYXNoLmNvbYIRbWFpbC5pbXByZW5zYS5jb22CFW1haWwuaW1wcmVuc2FhcmVhLmNvbYIZbWFpbC5pbXByZW5zYWJyYXppbGhkLmNvbYIZbWFpbC5pbXByZW5zYWJyYXppbGhxLmNvbYIbbWFpbC5pbXByZW5zYWJyYXppbGluZm8uY29tghttYWlsLmltcHJlbnNhYnJhemlsbGlzdC5jb22CFW1haWwuaW1wcmVuc2FicmhxLmNvbYIXbWFpbC5pbXByZW5zYWJyaW5mby5jb22CF21haWwuaW1wcmVuc2FicnNpdGUuY29tghZtYWlsLmltcHJlbnNhZmlyc3QuY29tghZtYWlsLmltcHJlbnNhZmxhc2guY29tghVtYWlsLmltcHJlbnNhZmxleC5jb22CFm1haWwuaW1wcmVuc2FmcmVzaC5jb22CFW1haWwuaW1wcmVuc2Fob2plLmNvbYITbWFpbC5pbXByZW5zYWhxLmNvbYIVbWFpbC5pbXByZW5zYWluZm8uY29tghZtYWlsLmltcHJlbnNhbG9jYWwuY29tghRtYWlsLmltcHJlbnNhbWFnLmNvbYIUbWFpbC5pbXByZW5zYW5ldC5jb22CFW1haWwuaW1wcmVuc2FuZXdzLmNvbYIXbWFpbC5pbXByZW5zYW9ubGluZS5jb22CFW1haWwuaW1wcmVuc2FzcG90LmNvbYIUbWFpbC5pbXByZXNhbmV3cy5jb22CIW1haWwuaW5mb3JtYXRpZnRpdHJlc2RlcHJlc3NlLmNvbYIkbWFpbC5pbnRlcm5lY2llZ2F6ZXR5aWN6YXNvcGlzbWEuY29tgiZtYWlsLmludGVybmV0b3dlamdhemV0eWljemFzb3Bpc21hLmNvbYIZbWFpbC5pcmlzaHByZXNzdGl0bGVzLmNvbYIbbWFpbC5pc3JhZWxpcHJlc3N0aXRsZXMuY29tghltYWlsLmpvcm5haXMtcmV2aXN0YXMuY29tgiBtYWlsLmpvcm5haXNlcmV2aXN0YXMtY2VudGVyLmNvbYIgbWFpbC5qb3JuYWlzZXJldmlzdGFzLXBvcnRhbC5jb22CHG1haWwuam9ybmFpc2VyZXZpc3Rhcy1wdC5jb22CHW1haWwuam9ybmFpc2VyZXZpc3Rhcy13ZWIuY29tghltYWlsLmpvcm5haXNlcmV2aXN0YXMuY29tghxtYWlsLmpvcm5haXNlcmV2aXN0YXNtYWcuY29tgh5tYWlsLmpvcm5haXNlcmV2aXN0YXNtZWRpYS5jb22CHW1haWwuam9ybmFpc2VyZXZpc3Rhc25ld3MuY29tgh9tYWlsLmpvcm5haXNlcmV2aXN0YXNvbmxpbmUuY29tgh5tYWlsLmpvcm5haXNlcmV2aXN0YXNwbGFjZS5jb22CHW1haWwuam9ybmFpc2VyZXZpc3Rhc3Bvc3QuY29tgh1tYWlsLmpvcm5haXNlcmV2aXN0YXN6b25lLmNvbYIXbWFpbC5qb3JuYWlzbmV3cy1ici5jb22CGG1haWwuam9ybmFpc3JldmlzdGFzLmNvbYIcbWFpbC5qb3VybmF1eGV0bWFnYXppbmVzLmNvbYIgbWFpbC5qb3VybmF1eGV0bWFnYXppbmVzZmxleC5jb22CFW1haWwua2F0dGVldHN1b21pLmNvbYIYbWFpbC5rb3JhbmRhbm1hamFsYWguY29tgiZtYWlsLmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4tY2VudGVyLmNvbYIibWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVuLW5sLmNvbYIfbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIlbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVuYWdlbmN5LmNvbYIlbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVuZGVrc2VsLmNvbYIjbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVuam91dy5jb22CIm1haWwua3JhbnRlbmVudGlqZHNjaHJpZnRlbm1hZy5jb22CIm1haWwua3JhbnRlbmVudGlqZHNjaHJpZnRlbm5ldC5jb22CJ21haWwua3JhbnRlbmVudGlqZHNjaHJpZnRlbm5ld2NvdmVyLmNvbYIlbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVubmlldXdzLmNvbYIlbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVubmxuZXdzLmNvbYIjbWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVucG9zdC5jb22CFW1haWwubWFnYXNpbmVyLW5vLmNvbYIdbWFpbC5tYWlsbWFuYXZpc2Vyb2dibGFkZS5jb22CHm1haWwubWFpbG1hbmF2aXNlcm9nYmxhZGVyLmNvbYIYbWFpbC5tYWlsbWFuaW1wcmVuc2EuY29tgiBtYWlsLm1haWxtYW5qb3JuYWlzZXJldmlzdGFzLmNvbYIjbWFpbC5tYWlsbWFuam91cm5hdXhldG1hZ2F6aW5lcy5jb22CIG1haWwubWFpbG1hbnBvcnRhZGFzZGVwcmVuc2EuY29tgiJtYWlsLm1haWxtYW5wb3J0YWxlZGVsbGFzdGFtcGEuY29tghttYWlsLm1haWxtYW5wcmVzc3RpdGxlcy5jb22CHm1haWwubWFpbG1hbnRpdHJlc2RlcHJlc3NlLmNvbYITbWFpbC5tZWRpYW5ld2RlLmNvbYITbWFpbC5tZWRpYW5ld25sLmNvbYIVbWFpbC5tZWRpYW5ld3MtYnIuY29tghVtYWlsLm1lZGlhbmV3cy1pdC5jb22CF21haWwubWVkaWFwb3J0YWwtaXQuY29tghdtYWlsLm1lZGlhcG9ydGFsLXBsLmNvbYIVbWFpbC5tZWRpYXpvbmUtYXUuY29tghdtYWlsLm1lZGlhem9uZS1iZW5sLmNvbYIVbWFpbC5tZWRpYXpvbmUtcGwuY29tghVtYWlsLm1lZGlhem9uZS1wdC5jb22CFW1haWwubWVkaWF6b25lLXJ1LmNvbYIXbWFpbC5tZWRpZXRhY2tlci1zdy5jb22CGm1haWwubWVkaWV0aWRuaW5nYXItc3cuY29tghxtYWlsLm1lZGlldGlkc2tyaWZ0ZXItc3cuY29tghxtYWlsLm1vbmRldGl0cmVzZGVwcmVzc2UuY29tghltYWlsLm15Z2F6ZXR5emh1cm5hbHkuY29tgiVtYWlsLm5ldXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgh1tYWlsLm5ldy1ub2F2aXNlcm9nYmxhZGVyLmNvbYIhbWFpbC5uZXdhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgh1tYWlsLm5ld25vLWF2aXNlcm9nYmxhZGVyLmNvbYIcbWFpbC5uZXdub2F2aXNlcm9nYmxhZGVyLmNvbYIibWFpbC5uZXdzYXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIVbWFpbC5uZXdzbWVkaWEtYXUuY29tghdtYWlsLm5ld3NtZWRpYS1iZW5sLmNvbYIVbWFpbC5uZXdzbWVkaWEtZGUuY29tghVtYWlsLm5ld3NtZWRpYS1maS5jb22CFW1haWwubmV3c21lZGlhLWl0LmNvbYIVbWFpbC5uZXdzbWVkaWEtcGwuY29tghVtYWlsLm5ld3NtZWRpYS1wdC5jb22CHW1haWwubmV3c3RpdHJlc2RlcHJlc3NlbmwuY29tghxtYWlsLm5ld3RpdHJlc2RlcHJlc3NlbmwuY29tgiVtYWlsLm5ld3plaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiBtYWlsLm5pZXV3cy10aXRyZXNkZXByZXNzZW5sLmNvbYIlbWFpbC5uaWV1d3NrcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIhbWFpbC5ubGtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgh1tYWlsLm5sdGl0cmVzZGVwcmVzc2VsaW5rLmNvbYIdbWFpbC5ubHRpdHJlc2RlcHJlc3NlbGlzdC5jb22CGm1haWwubm8tYXZpc2Vyb2dibGFkZXIuY29tghxtYWlsLm5vYXZpc2Vyb2dibGFkZXItZnAuY29tgiBtYWlsLm5vdXZlbGxlc3RpdHJlc2RlcHJlc3NlLmNvbYIibWFpbC5ub3V2ZWxsZXN0aXRyZXNkZXByZXNzZWZyLmNvbYIXbWFpbC5ub3ZpbmFjYXNvcGlzdS5jb22CHm1haWwubm93eWdhemV0eWljemFzb3Bpc21hLmNvbYIdbWFpbC5ueWhlZGVyYXZpc2Vyb2dibGFkZS5jb22CGW1haWwubnloZWRlcm1hZ2FzaW5lci5jb22CFm1haWwubnpwcmVzc3RpdGxlcy5jb22CJG1haWwub25saW5lYXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIUbWFpbC5vbm1lZGlhYmVmci5jb22CFG1haWwub25tZWRpYWJlbmwuY29tghJtYWlsLm9ubWVkaWFici5jb22CEm1haWwub25tZWRpYWRlLmNvbYISbWFpbC5vbm1lZGlhZmkuY29tghJtYWlsLm9ubWVkaWFpdC5jb22CEm1haWwub25tZWRpYXJ1LmNvbYISbWFpbC5vbm1lZGlhc2UuY29tgiRtYWlsLm9uemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CJG1haWwub3J6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIbbWFpbC5wYWhheWFnYW5hdG1hZ2FzaW4uY29tghVtYWlsLnBvbGFuZC1tZWRpYS5jb22CG21haWwucG9ydGFkYXNhcmdlbnRpbmFzLmNvbYIcbWFpbC5wb3J0YWRhc2NvbG9tYmlhbmFzLmNvbYIYbWFpbC5wb3J0YWRhc2RlY2hpbGUuY29tghptYWlsLnBvcnRhZGFzZGVlY3VhZG9yLmNvbYIXbWFpbC5wb3J0YWRhc2RlcGVydS5jb22CHW1haWwucG9ydGFkYXNkZXByZW5zYS1kYXkuY29tghxtYWlsLnBvcnRhZGFzZGVwcmVuc2EtZXMuY29tgiBtYWlsLnBvcnRhZGFzZGVwcmVuc2Etb25saW5lLmNvbYIZbWFpbC5wb3J0YWRhc2RlcHJlbnNhLmNvbYIbbWFpbC5wb3J0YWRhc2RlcHJlbnNhaGQuY29tghxtYWlsLnBvcnRhZGFzZGVwcmVuc2FtYWcuY29tgh5tYWlsLnBvcnRhZGFzZGVwcmVuc2FtZWRpYS5jb22CHG1haWwucG9ydGFkYXNkZXByZW5zYW5ldC5jb22CHm1haWwucG9ydGFkYXNkZXByZW5zYXBsYWNlLmNvbYIdbWFpbC5wb3J0YWRhc2RlcHJlbnNhcG9zdC5jb22CHW1haWwucG9ydGFkYXNkZXByZW5zYXNpdGUuY29tghxtYWlsLnBvcnRhZGFzZGVwcmVuc2F3ZWIuY29tghxtYWlsLnBvcnRhZGFzZGV2ZW5lenVlbGEuY29tghptYWlsLnBvcnRhZGFzbWV4aWNhbmFzLmNvbYIibWFpbC5wb3J0YWxlZGVsbGFzdGFtcGEtY2VudGVyLmNvbYIbbWFpbC5wb3J0YWxlZGVsbGFzdGFtcGEuY29tgh9tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWFyZWEuY29tgh9tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWZsZXguY29tgh9tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWluZm8uY29tgiJtYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWl0YWx5aHEuY29tgiRtYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWl0YWx5aW5mby5jb22CJG1haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlsaW5rLmNvbYIkbWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseWxpc3QuY29tgiNtYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWl0YWx5bmV0LmNvbYImbWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseW9ubGluZS5jb22CJG1haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlzaXRlLmNvbYIjbWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseXdlYi5jb22CJW1haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHl3b3JsZC5jb22CH21haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRoZC5jb22CHm1haWwucG9ydGFsZWRlbGxhc3RhbXBhbWFnLmNvbYIfbWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFuZXdzLmNvbYIhbWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFvbmxpbmUuY29tgh9tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYXNpdGUuY29tgh5tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYXdlYi5jb22CH21haWwucG9ydGFsZWRlbGxhc3RhbXBhem9uZS5jb22CF21haWwucG9ydGFsbWVkaWEtaXQuY29tghVtYWlsLnBvcnRhbHN0YW1wYS5jb22CFW1haWwucG9ydGFsd2ViLWJlLmNvbYIVbWFpbC5wb3J0YWx3ZWItaXQuY29tghZtYWlsLnBvcnRhbHpvbmUtYmUuY29tghZtYWlsLnBvc3RuZXdzLWJlZnIuY29tghZtYWlsLnBvc3RuZXdzLWJlbmwuY29tgh1tYWlsLnBvc3R0aXRyZXNkZXByZXNzZW5sLmNvbYIYbWFpbC5wcmVzYXJvbWFuZWFzY2EuY29tghRtYWlsLnByZXNzZXRpdGVsLmNvbYIUbWFpbC5wcmVzc3RpdGxlcy5jb22CGG1haWwucHJlc3N0aXRsZXNmbGV4LmNvbYIXbWFpbC5wcmVzc3RpdGxlc21hZy5jb22CGG1haWwucHJlc3N0aXRsZXNuZXdzLmNvbYIcbWFpbC5wcmVzc3RpdGxlc25ld3NpbmZvLmNvbYIbbWFpbC5wcmVzc3RpdGxlc25ld3N3ZWIuY29tghhtYWlsLnByZXNzdGl0bGVzcG9zdC5jb22CG21haWwucHJlc3N0aXRsZXN6b25lLXVrLmNvbYIYbWFpbC5wcmVzc3RpdGxlc3pvbmUuY29tgiRtYWlsLnByb21vc21haWxtYW50aXRyZXNkZXByZXNzZS5jb22CF21haWwucmV2aXN0YXNicmF6aWwuY29tghhtYWlsLnJldmlzdGFzbmV3cy1ici5jb22CJ21haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXQtY2VudGVyLmNvbYIgbWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldC5jb22CK21haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXRlbnNpbW1haW5lbi5jb22CJG1haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXRmbGV4LmNvbYImbWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldG9ubGluZS5jb22CK21haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXRwYWlrYWxsaW5lbi5jb22CJG1haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXRwb3N0LmNvbYImbWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldHNhbGFtYS5jb22CJW1haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXR0dW9yZS5jb22CJG1haWwuc2Fub21hLWphYWlrYWthdXNsZWhkZXR1dXNpLmNvbYIWbWFpbC5zYXByZXNzdGl0bGVzLmNvbYIfbWFpbC5zYXVkaWFyYWJpYXByZXNzdGl0bGVzLmNvbYIYbWFpbC5zY2h3ZWl6ZXJwcmVzc2UuY29tgh1tYWlsLnNpbmdhcG9yZXByZXNzdGl0bGVzLmNvbYIibWFpbC5zaW5nYXBvcmVwcmVzc3RpdGxlc3BsYWNlLmNvbYIebWFpbC5zb3V0aGtvcmVhcHJlc3N0aXRsZXMuY29tghVtYWlsLnNwb3RtZWRpYS1wbC5jb22CFm1haWwuc3RhbXBhbmV3cy1pdC5jb22CFm1haWwuc3ZlcmlnZXRhY2tlci5jb22CH21haWwuc3dpYXRnYXpldHlpY3phc29waXNtYS5jb22CGW1haWwudGFja2VybnloZXRlci1zdy5jb22CKW1haWwudGFnbGljaHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiVtYWlsLnRhZ3plaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghZtYWlsLnRlc3RlZG9tYWlucGwuY29tgihtYWlsLnRoZXplaXR1bmdlbnVuZHplaXRzY2hyaXRlbnpvbmUuY29tghxtYWlsLnRpZG5pbmdhcm55aGV0ZXItc3cuY29tgidtYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyLWNlbnRlci5jb22CIG1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXIuY29tgiVtYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyYmxpeHQuY29tgiRtYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyZmxleC5jb22CJm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJmb3JzdGEuY29tgiRtYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyaWRhZy5jb22CJG1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJpbmZvLmNvbYIjbWFpbC50aWRuaW5nYXJvY2h0aWRza3JpZnRlcm5ldC5jb22CIm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJueS5jb22CJG1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJwb3N0LmNvbYIjbWFpbC50aWRuaW5nYXJvY2h0aWRza3JpZnRlcndlYi5jb22CH21haWwudGlqZHNjaHJpZnRlbmVua3JhbnRlbi5jb22CEm1haWwudGl0bGVzLXVrLmNvbYIXbWFpbC50aXRyZXNkZXByZXNzZS5jb22CIG1haWwudGl0cmVzZGVwcmVzc2ViZWxnaXVtbmwuY29tgiRtYWlsLnRpdHJlc2RlcHJlc3NlYmVsZ2l1bW5saW5mby5jb22CJG1haWwudGl0cmVzZGVwcmVzc2ViZWxnaXVtbmxsaW5rLmNvbYIjbWFpbC50aXRyZXNkZXByZXNzZWJlbGdpdW1ubG5ldC5jb22CJm1haWwudGl0cmVzZGVwcmVzc2ViZWxnaXVtbmxvbmxpbmUuY29tghttYWlsLnRpdHJlc2RlcHJlc3NlYmVubC5jb22CHW1haWwudGl0cmVzZGVwcmVzc2ViZW5saHEuY29tgh9tYWlsLnRpdHJlc2RlcHJlc3NlYmVubGluZm8uY29tgh9tYWlsLnRpdHJlc2RlcHJlc3NlYmVubGxpbmsuY29tgh9tYWlsLnRpdHJlc2RlcHJlc3NlYmVubGxpc3QuY29tgiFtYWlsLnRpdHJlc2RlcHJlc3NlYmVubG9ubGluZS5jb22CH21haWwudGl0cmVzZGVwcmVzc2ViZW5sc2l0ZS5jb22CHG1haWwudGl0cmVzZGVwcmVzc2Vjb3Zlci5jb22CIG1haWwudGl0cmVzZGVwcmVzc2Vmci1jZW50ZXIuY29tgh5tYWlsLnRpdHJlc2RlcHJlc3NlZnItbWFpbC5jb22CIG1haWwudGl0cmVzZGVwcmVzc2Vmci1vbmxpbmUuY29tgh1tYWlsLnRpdHJlc2RlcHJlc3NlZnItd2ViLmNvbYIfbWFpbC50aXRyZXNkZXByZXNzZWZyYWdlbmN5LmNvbYIcbWFpbC50aXRyZXNkZXByZXNzZWZybmV0LmNvbYIfbWFpbC50aXRyZXNkZXByZXNzZWZyb25saW5lLmNvbYIdbWFpbC50aXRyZXNkZXByZXNzZWZycG9zdC5jb22CHW1haWwudGl0cmVzZGVwcmVzc2VmcnpvbmUuY29tgh5tYWlsLnRpdHJlc2RlcHJlc3NlbGluay1ubC5jb22CHm1haWwudGl0cmVzZGVwcmVzc2VsaXN0LW5sLmNvbYIabWFpbC50aXRyZXNkZXByZXNzZW1hZy5jb22CHm1haWwudGl0cmVzZGVwcmVzc2VtYWlsLWZyLmNvbYIdbWFpbC50aXRyZXNkZXByZXNzZW1haWxmci5jb22CIG1haWwudGl0cmVzZGVwcmVzc2VubC1jZW50ZXIuY29tgh9tYWlsLnRpdHJlc2RlcHJlc3NlbmxhZ2VuY3kuY29tgh5tYWlsLnRpdHJlc2RlcHJlc3Nlbmxjb3Zlci5jb22CHW1haWwudGl0cmVzZGVwcmVzc2VubG5ld3MuY29tgh9tYWlsLnRpdHJlc2RlcHJlc3NlbmxvbmxpbmUuY29tgh1tYWlsLnRpdHJlc2RlcHJlc3Nlbmxwb3N0LmNvbYIdbWFpbC50aXRyZXNkZXByZXNzZW5sc2l0ZS5jb22CHW1haWwudGl0cmVzZGVwcmVzc2VubHpvbmUuY29tgiNtYWlsLnRvZGF5YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIWbWFpbC50b2RheW1lZGlhLWRlLmNvbYISbWFpbC50dXJrYmFzaW4uY29tghdtYWlsLnVhZXByZXNzdGl0bGVzLmNvbYIXbWFpbC51ay1tZWRpYXRpdGxlcy5jb22CFW1haWwudWstc3BvdG1lZGlhLmNvbYIXbWFpbC51a2Nsb3VkY29udGVudC5jb22CF21haWwudXNhcHJlc3N0aXRsZXMuY29tghttYWlsLnZpZXRuYW1wcmVzc3RpdGxlcy5jb22CHW1haWwud2VsY29tZWF2aXNlcm9nYmxhZGUuY29tgh5tYWlsLndlbGNvbWVhdmlzZXJvZ2JsYWRlci5jb22CIG1haWwud2VsY29tZWpvcm5haXNlcmV2aXN0YXMuY29tgiBtYWlsLndlbGNvbWVwb3J0YWRhc2RlcHJlbnNhLmNvbYIibWFpbC53ZWxjb21lcG9ydGFsZWRlbGxhc3RhbXBhLmNvbYIYbWFpbC53ZWxjb21lcHJlc3MtdWsuY29tghttYWlsLndlbGNvbWVwcmVzc3RpdGxlcy5jb22CJ21haWwud2VsY29tZXNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0LmNvbYInbWFpbC53ZWxjb21ldGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXIuY29tgh5tYWlsLndlbGNvbWV0aXRyZXNkZXByZXNzZS5jb22CKW1haWwud2VsY29tZXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghRtYWlsLndvcmttZWRpYWJyLmNvbYIUbWFpbC53b3JrbWVkaWFkZS5jb22CFG1haWwud29ya21lZGlhZmkuY29tghRtYWlsLndvcmttZWRpYWl0LmNvbYIZbWFpbC53b3JsZHByZXNzdGl0bGVzLmNvbYIZbWFpbC53b3JsZHByZXNzdGl0bGVzLnh5eoIkbWFpbC55ZXpoZWRuZXZueXllZ2F6ZXR5emh1cm5hbHkuY29tgiJtYWlsLnlvdXJhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgiNtYWlsLnlvdXJrcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIpbWFpbC56ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLWNlbnRlci5jb22CJW1haWwuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi1kZS5jb22CIm1haWwuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CJm1haWwuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbmluZm8uY29tgiVtYWlsLnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW5uZXQuY29tghdtYWlsLnpvbmVtZWRpYS1iZWZyLmNvbYIXbWFpbC56b25lbWVkaWEtYmVubC5jb22CGG1haWxtYW5hdmlzZXJvZ2JsYWRlLmNvbYIZbWFpbG1hbmF2aXNlcm9nYmxhZGVyLmNvbYITbWFpbG1hbmltcHJlbnNhLmNvbYIbbWFpbG1hbmpvcm5haXNlcmV2aXN0YXMuY29tgh5tYWlsbWFuam91cm5hdXhldG1hZ2F6aW5lcy5jb22CG21haWxtYW5wb3J0YWRhc2RlcHJlbnNhLmNvbYIdbWFpbG1hbnBvcnRhbGVkZWxsYXN0YW1wYS5jb22CFm1haWxtYW5wcmVzc3RpdGxlcy5jb22CGW1haWxtYW50aXRyZXNkZXByZXNzZS5jb22CDm1lZGlhbmV3ZGUuY29tgg5tZWRpYW5ld25sLmNvbYIQbWVkaWFuZXdzLWJyLmNvbYIQbWVkaWFuZXdzLWl0LmNvbYISbWVkaWFwb3J0YWwtaXQuY29tghJtZWRpYXBvcnRhbC1wbC5jb22CEG1lZGlhem9uZS1hdS5jb22CEm1lZGlhem9uZS1iZW5sLmNvbYIQbWVkaWF6b25lLXBsLmNvbYIQbWVkaWF6b25lLXB0LmNvbYIQbWVkaWF6b25lLXJ1LmNvbYISbWVkaWV0YWNrZXItc3cuY29tghVtZWRpZXRpZG5pbmdhci1zdy5jb22CF21lZGlldGlkc2tyaWZ0ZXItc3cuY29tghdtb25kZXRpdHJlc2RlcHJlc3NlLmNvbYIUbXlnYXpldHl6aHVybmFseS5jb22CIG5ldXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghhuZXctbm9hdmlzZXJvZ2JsYWRlci5jb22CHG5ld2F1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CGG5ld25vLWF2aXNlcm9nYmxhZGVyLmNvbYIXbmV3bm9hdmlzZXJvZ2JsYWRlci5jb22CHW5ld3NhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tghBuZXdzbWVkaWEtYXUuY29tghJuZXdzbWVkaWEtYmVubC5jb22CEG5ld3NtZWRpYS1kZS5jb22CEG5ld3NtZWRpYS1maS5jb22CEG5ld3NtZWRpYS1pdC5jb22CEG5ld3NtZWRpYS1wbC5jb22CEG5ld3NtZWRpYS1wdC5jb22CGG5ld3N0aXRyZXNkZXByZXNzZW5sLmNvbYIXbmV3dGl0cmVzZGVwcmVzc2VubC5jb22CIG5ld3plaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghtuaWV1d3MtdGl0cmVzZGVwcmVzc2VubC5jb22CIG5pZXV3c2tyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tghxubGtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tghhubHRpdHJlc2RlcHJlc3NlbGluay5jb22CGG5sdGl0cmVzZGVwcmVzc2VsaXN0LmNvbYIVbm8tYXZpc2Vyb2dibGFkZXIuY29tghdub2F2aXNlcm9nYmxhZGVyLWZwLmNvbYIbbm91dmVsbGVzdGl0cmVzZGVwcmVzc2UuY29tgh1ub3V2ZWxsZXN0aXRyZXNkZXByZXNzZWZyLmNvbYISbm92aW5hY2Fzb3Bpc3UuY29tghlub3d5Z2F6ZXR5aWN6YXNvcGlzbWEuY29tghhueWhlZGVyYXZpc2Vyb2dibGFkZS5jb22CFG55aGVkZXJtYWdhc2luZXIuY29tghFuenByZXNzdGl0bGVzLmNvbYIfb25saW5lYXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIPb25tZWRpYWJlZnIuY29tgg9vbm1lZGlhYmVubC5jb22CDW9ubWVkaWFici5jb22CDW9ubWVkaWFkZS5jb22CDW9ubWVkaWFmaS5jb22CDW9ubWVkaWFpdC5jb22CDW9ubWVkaWFydS5jb22CDW9ubWVkaWFzZS5jb22CH29uemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CH29yemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CFnBhaGF5YWdhbmF0bWFnYXNpbi5jb22CEHBvbGFuZC1tZWRpYS5jb22CFnBvcnRhZGFzYXJnZW50aW5hcy5jb22CF3BvcnRhZGFzY29sb21iaWFuYXMuY29tghNwb3J0YWRhc2RlY2hpbGUuY29tghVwb3J0YWRhc2RlZWN1YWRvci5jb22CEnBvcnRhZGFzZGVwZXJ1LmNvbYIYcG9ydGFkYXNkZXByZW5zYS1kYXkuY29tghdwb3J0YWRhc2RlcHJlbnNhLWVzLmNvbYIbcG9ydGFkYXNkZXByZW5zYS1vbmxpbmUuY29tghRwb3J0YWRhc2RlcHJlbnNhLmNvbYIWcG9ydGFkYXNkZXByZW5zYWhkLmNvbYIXcG9ydGFkYXNkZXByZW5zYW1hZy5jb22CGXBvcnRhZGFzZGVwcmVuc2FtZWRpYS5jb22CF3BvcnRhZGFzZGVwcmVuc2FuZXQuY29tghlwb3J0YWRhc2RlcHJlbnNhcGxhY2UuY29tghhwb3J0YWRhc2RlcHJlbnNhcG9zdC5jb22CGHBvcnRhZGFzZGVwcmVuc2FzaXRlLmNvbYIXcG9ydGFkYXNkZXByZW5zYXdlYi5jb22CF3BvcnRhZGFzZGV2ZW5lenVlbGEuY29tghVwb3J0YWRhc21leGljYW5hcy5jb22CHXBvcnRhbGVkZWxsYXN0YW1wYS1jZW50ZXIuY29tghZwb3J0YWxlZGVsbGFzdGFtcGEuY29tghpwb3J0YWxlZGVsbGFzdGFtcGFhcmVhLmNvbYIacG9ydGFsZWRlbGxhc3RhbXBhZmxleC5jb22CGnBvcnRhbGVkZWxsYXN0YW1wYWluZm8uY29tgh1wb3J0YWxlZGVsbGFzdGFtcGFpdGFseWhxLmNvbYIfcG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlpbmZvLmNvbYIfcG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlsaW5rLmNvbYIfcG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlsaXN0LmNvbYIecG9ydGFsZWRlbGxhc3RhbXBhaXRhbHluZXQuY29tgiFwb3J0YWxlZGVsbGFzdGFtcGFpdGFseW9ubGluZS5jb22CH3BvcnRhbGVkZWxsYXN0YW1wYWl0YWx5c2l0ZS5jb22CHnBvcnRhbGVkZWxsYXN0YW1wYWl0YWx5d2ViLmNvbYIgcG9ydGFsZWRlbGxhc3RhbXBhaXRhbHl3b3JsZC5jb22CGnBvcnRhbGVkZWxsYXN0YW1wYWl0aGQuY29tghlwb3J0YWxlZGVsbGFzdGFtcGFtYWcuY29tghpwb3J0YWxlZGVsbGFzdGFtcGFuZXdzLmNvbYIccG9ydGFsZWRlbGxhc3RhbXBhb25saW5lLmNvbYIacG9ydGFsZWRlbGxhc3RhbXBhc2l0ZS5jb22CGXBvcnRhbGVkZWxsYXN0YW1wYXdlYi5jb22CGnBvcnRhbGVkZWxsYXN0YW1wYXpvbmUuY29tghJwb3J0YWxtZWRpYS1pdC5jb22CEHBvcnRhbHN0YW1wYS5jb22CEHBvcnRhbHdlYi1iZS5jb22CEHBvcnRhbHdlYi1pdC5jb22CEXBvcnRhbHpvbmUtYmUuY29tghFwb3N0bmV3cy1iZWZyLmNvbYIRcG9zdG5ld3MtYmVubC5jb22CGHBvc3R0aXRyZXNkZXByZXNzZW5sLmNvbYITcHJlc2Fyb21hbmVhc2NhLmNvbYIPcHJlc3NldGl0ZWwuY29tgg9wcmVzc3RpdGxlcy5jb22CE3ByZXNzdGl0bGVzZmxleC5jb22CEnByZXNzdGl0bGVzbWFnLmNvbYITcHJlc3N0aXRsZXNuZXdzLmNvbYIXcHJlc3N0aXRsZXNuZXdzaW5mby5jb22CFnByZXNzdGl0bGVzbmV3c3dlYi5jb22CE3ByZXNzdGl0bGVzcG9zdC5jb22CFnByZXNzdGl0bGVzem9uZS11ay5jb22CE3ByZXNzdGl0bGVzem9uZS5jb22CH3Byb21vc21haWxtYW50aXRyZXNkZXByZXNzZS5jb22CEnJldmlzdGFzYnJhemlsLmNvbYITcmV2aXN0YXNuZXdzLWJyLmNvbYIic2Fub21hLWphYWlrYWthdXNsZWhkZXQtY2VudGVyLmNvbYIbc2Fub21hLWphYWlrYWthdXNsZWhkZXQuY29tgiZzYW5vbWEtamFhaWtha2F1c2xlaGRldGVuc2ltbWFpbmVuLmNvbYIfc2Fub21hLWphYWlrYWthdXNsZWhkZXRmbGV4LmNvbYIhc2Fub21hLWphYWlrYWthdXNsZWhkZXRvbmxpbmUuY29tgiZzYW5vbWEtamFhaWtha2F1c2xlaGRldHBhaWthbGxpbmVuLmNvbYIfc2Fub21hLWphYWlrYWthdXNsZWhkZXRwb3N0LmNvbYIhc2Fub21hLWphYWlrYWthdXNsZWhkZXRzYWxhbWEuY29tgiBzYW5vbWEtamFhaWtha2F1c2xlaGRldHR1b3JlLmNvbYIfc2Fub21hLWphYWlrYWthdXNsZWhkZXR1dXNpLmNvbYIRc2FwcmVzc3RpdGxlcy5jb22CGnNhdWRpYXJhYmlhcHJlc3N0aXRsZXMuY29tghNzY2h3ZWl6ZXJwcmVzc2UuY29tghhzaW5nYXBvcmVwcmVzc3RpdGxlcy5jb22CHXNpbmdhcG9yZXByZXNzdGl0bGVzcGxhY2UuY29tghlzb3V0aGtvcmVhcHJlc3N0aXRsZXMuY29tghBzcG90bWVkaWEtcGwuY29tghFzdGFtcGFuZXdzLWl0LmNvbYIRc3ZlcmlnZXRhY2tlci5jb22CGnN3aWF0Z2F6ZXR5aWN6YXNvcGlzbWEuY29tghR0YWNrZXJueWhldGVyLXN3LmNvbYIkdGFnbGljaHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiB0YWd6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIRdGVzdGVkb21haW5wbC5jb22CI3RoZXplaXR1bmdlbnVuZHplaXRzY2hyaXRlbnpvbmUuY29tghd0aWRuaW5nYXJueWhldGVyLXN3LmNvbYIidGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXItY2VudGVyLmNvbYIbdGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXIuY29tgiB0aWRuaW5nYXJvY2h0aWRza3JpZnRlcmJsaXh0LmNvbYIfdGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJmbGV4LmNvbYIhdGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJmb3JzdGEuY29tgh90aWRuaW5nYXJvY2h0aWRza3JpZnRlcmlkYWcuY29tgh90aWRuaW5nYXJvY2h0aWRza3JpZnRlcmluZm8uY29tgh50aWRuaW5nYXJvY2h0aWRza3JpZnRlcm5ldC5jb22CHXRpZG5pbmdhcm9jaHRpZHNrcmlmdGVybnkuY29tgh90aWRuaW5nYXJvY2h0aWRza3JpZnRlcnBvc3QuY29tgh50aWRuaW5nYXJvY2h0aWRza3JpZnRlcndlYi5jb22CGnRpamRzY2hyaWZ0ZW5lbmtyYW50ZW4uY29tgg10aXRsZXMtdWsuY29tghJ0aXRyZXNkZXByZXNzZS5jb22CG3RpdHJlc2RlcHJlc3NlYmVsZ2l1bW5sLmNvbYIfdGl0cmVzZGVwcmVzc2ViZWxnaXVtbmxpbmZvLmNvbYIfdGl0cmVzZGVwcmVzc2ViZWxnaXVtbmxsaW5rLmNvbYIedGl0cmVzZGVwcmVzc2ViZWxnaXVtbmxuZXQuY29tgiF0aXRyZXNkZXByZXNzZWJlbGdpdW1ubG9ubGluZS5jb22CFnRpdHJlc2RlcHJlc3NlYmVubC5jb22CGHRpdHJlc2RlcHJlc3NlYmVubGhxLmNvbYIadGl0cmVzZGVwcmVzc2ViZW5saW5mby5jb22CGnRpdHJlc2RlcHJlc3NlYmVubGxpbmsuY29tghp0aXRyZXNkZXByZXNzZWJlbmxsaXN0LmNvbYIcdGl0cmVzZGVwcmVzc2ViZW5sb25saW5lLmNvbYIadGl0cmVzZGVwcmVzc2ViZW5sc2l0ZS5jb22CF3RpdHJlc2RlcHJlc3NlY292ZXIuY29tght0aXRyZXNkZXByZXNzZWZyLWNlbnRlci5jb22CGXRpdHJlc2RlcHJlc3NlZnItbWFpbC5jb22CG3RpdHJlc2RlcHJlc3NlZnItb25saW5lLmNvbYIYdGl0cmVzZGVwcmVzc2Vmci13ZWIuY29tghp0aXRyZXNkZXByZXNzZWZyYWdlbmN5LmNvbYIXdGl0cmVzZGVwcmVzc2Vmcm5ldC5jb22CGnRpdHJlc2RlcHJlc3NlZnJvbmxpbmUuY29tghh0aXRyZXNkZXByZXNzZWZycG9zdC5jb22CGHRpdHJlc2RlcHJlc3NlZnJ6b25lLmNvbYIZdGl0cmVzZGVwcmVzc2VsaW5rLW5sLmNvbYIZdGl0cmVzZGVwcmVzc2VsaXN0LW5sLmNvbYIVdGl0cmVzZGVwcmVzc2VtYWcuY29tghl0aXRyZXNkZXByZXNzZW1haWwtZnIuY29tghh0aXRyZXNkZXByZXNzZW1haWxmci5jb22CG3RpdHJlc2RlcHJlc3NlbmwtY2VudGVyLmNvbYIadGl0cmVzZGVwcmVzc2VubGFnZW5jeS5jb22CGXRpdHJlc2RlcHJlc3Nlbmxjb3Zlci5jb22CGHRpdHJlc2RlcHJlc3NlbmxuZXdzLmNvbYIadGl0cmVzZGVwcmVzc2VubG9ubGluZS5jb22CGHRpdHJlc2RlcHJlc3Nlbmxwb3N0LmNvbYIYdGl0cmVzZGVwcmVzc2VubHNpdGUuY29tghh0aXRyZXNkZXByZXNzZW5sem9uZS5jb22CHnRvZGF5YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIRdG9kYXltZWRpYS1kZS5jb22CDXR1cmtiYXNpbi5jb22CEnVhZXByZXNzdGl0bGVzLmNvbYISdWstbWVkaWF0aXRsZXMuY29tghB1ay1zcG90bWVkaWEuY29tghJ1a2Nsb3VkY29udGVudC5jb22CEnVzYXByZXNzdGl0bGVzLmNvbYIWdmlldG5hbXByZXNzdGl0bGVzLmNvbYIYd2VsY29tZWF2aXNlcm9nYmxhZGUuY29tghl3ZWxjb21lYXZpc2Vyb2dibGFkZXIuY29tght3ZWxjb21lam9ybmFpc2VyZXZpc3Rhcy5jb22CG3dlbGNvbWVwb3J0YWRhc2RlcHJlbnNhLmNvbYIdd2VsY29tZXBvcnRhbGVkZWxsYXN0YW1wYS5jb22CE3dlbGNvbWVwcmVzcy11ay5jb22CFndlbGNvbWVwcmVzc3RpdGxlcy5jb22CIndlbGNvbWVzYW5vbWEtamFhaWtha2F1c2xlaGRldC5jb22CIndlbGNvbWV0aWRuaW5nYXJvY2h0aWRza3JpZnRlci5jb22CGXdlbGNvbWV0aXRyZXNkZXByZXNzZS5jb22CJHdlbGNvbWV6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIPd29ya21lZGlhYnIuY29tgg93b3JrbWVkaWFkZS5jb22CD3dvcmttZWRpYWZpLmNvbYIPd29ya21lZGlhaXQuY29tghR3b3JsZHByZXNzdGl0bGVzLnh5eoIgd3d3LmFraGFiYWFyZWVuYXVycGF0cmlrYWVlbi5jb22CGHd3dy5ha2hiYXJkYW5tYWphbGFoLmNvbYITd3d3LmFsbG1lZGlhLWF1LmNvbYIVd3d3LmFsbG1lZGlhLWJlZnIuY29tghV3d3cuYWxsbWVkaWEtYmVubC5jb22CE3d3dy5hbGxtZWRpYS1lcy5jb22CF3d3dy5hbGxtZWRpYW5ld3Mtc3cuY29tghR3d3cuYWxsbmV3cy1iZWZyLmNvbYIUd3d3LmFsbG5ld3MtYmVubC5jb22CJHd3dy5hdXN0cmFsaWFucHJlc3N0aXRsZXMtY2VudGVyLmNvbYIdd3d3LmF1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CIXd3dy5hdXN0cmFsaWFucHJlc3N0aXRsZXNhcmVhLmNvbYIfd3d3LmF1c3RyYWxpYW5wcmVzc3RpdGxlc2F1LmNvbYIhd3d3LmF1c3RyYWxpYW5wcmVzc3RpdGxlc2luZm8uY29tgiF3d3cuYXVzdHJhbGlhbnByZXNzdGl0bGVzbWFpbC5jb22CIHd3dy5hdXN0cmFsaWFucHJlc3N0aXRsZXNuZXQuY29tgiF3d3cuYXVzdHJhbGlhbnByZXNzdGl0bGVzbmV3cy5jb22CI3d3dy5hdXN0cmFsaWFucHJlc3N0aXRsZXNvbmxpbmUuY29tgiF3d3cuYXVzdHJhbGlhbnByZXNzdGl0bGVzcG9zdC5jb22CInd3dy5hdXN0cmFsaWFucHJlc3N0aXRsZXN0b2RheS5jb22CJHd3dy5hdXN0cmFsaWFucHJlc3N0aXRsZXN1cGRhdGVzLmNvbYIhd3d3LmF1c3RyYWxpYW5wcmVzc3RpdGxlc3pvbmUuY29tghF3d3cuYXZpc2VyLWRrLmNvbYIcd3d3LmF2aXNlcm9nYmxhZGUtY2VudGVyLmNvbYIYd3d3LmF2aXNlcm9nYmxhZGUtZGsuY29tght3d3cuYXZpc2Vyb2dibGFkZS13b3JsZC5jb22CGnd3dy5hdmlzZXJvZ2JsYWRlLXpvbmUuY29tghV3d3cuYXZpc2Vyb2dibGFkZS5jb22CG3d3dy5hdmlzZXJvZ2JsYWRlY2VudGVyLmNvbYIZd3d3LmF2aXNlcm9nYmxhZGVmbGV4LmNvbYIZd3d3LmF2aXNlcm9nYmxhZGVpbmZvLmNvbYIid3d3LmF2aXNlcm9nYmxhZGVrb21tdW5pa2F0aW9uLmNvbYIYd3d3LmF2aXNlcm9nYmxhZGVtYWcuY29tghp3d3cuYXZpc2Vyb2dibGFkZW1lZGlhLmNvbYIYd3d3LmF2aXNlcm9nYmxhZGVuZXcuY29tghl3d3cuYXZpc2Vyb2dibGFkZXBvc3QuY29tghx3d3cuYXZpc2Vyb2dibGFkZXByZW1pdW0uY29tgh13d3cuYXZpc2Vyb2dibGFkZXItY2VudGVyLmNvbYIbd3d3LmF2aXNlcm9nYmxhZGVyLXpvbmUuY29tghZ3d3cuYXZpc2Vyb2dibGFkZXIuY29tghp3d3cuYXZpc2Vyb2dibGFkZXJmbGV4LmNvbYIZd3d3LmF2aXNlcm9nYmxhZGVybWFnLmNvbYIbd3d3LmF2aXNlcm9nYmxhZGVybWVkaWEuY29tghx3d3cuYXZpc2Vyb2dibGFkZXJvbmxpbmUuY29tghp3d3cuYXZpc2Vyb2dibGFkZXJwb3N0LmNvbYIdd3d3LmF2aXNlcm9nYmxhZGVydXBkYXRlcy5jb22CGXd3dy5hdmlzZXJvZ2JsYWRlcndlYi5jb22CGXd3dy5hdmlzZXJvZ2JsYWRlc2l0ZS5jb22CG3d3dy5hdmlzZXJvZ2JsYWRlc3RhdGljLmNvbYIZd3d3LmNhbmFkYXByZXNzdGl0bGVzLmNvbYITd3d3LmNhcGFzYnJhemlsLmNvbYIjd3d3LmNvZHppZW5uaWVnYXpldHlpY3phc29waXNtYS5jb22CG3d3dy5jb3ZlcnRpdHJlc2RlcHJlc3NlLmNvbYIdd3d3LmNvdmVydGl0cmVzZGVwcmVzc2VubC5jb22CJ3d3dy5kYWdlbGlqa3NrcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIhd3d3LmRhZ2tyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgiJ3d3cuZGFpbHlhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgiB3d3cuZGF5YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIZd3d3LmRheWdhemV0eXpodXJuYWx5LmNvbYImd3d3LmRlLWZwemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CFnd3dy5kZWNsb3VkY29udGVudC5jb22CJnd3dy5kZWZwLXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiV3d3cuZGVmcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiZ3d3cuZGVpbmV6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIqd3d3LmRlbWFpbC1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgil3d3cuZGVtYWlsZnB6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIqd3d3LmRlbmV3cy1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgit3d3cuZGVwcmVzcy1mcHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiV3d3cuZGlnaXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tght3d3cuZGstYXZpc2Vyb2dibGFkZS1mcC5jb22CGXd3dy5ka2ZwYXZpc2Vyb2dibGFkZS5jb22CIXd3dy5kemllbm5pa2dhemV0eWljemFzb3Bpc21hLmNvbYIdd3d3LmVubGlnbmV0aXRyZXNkZXByZXNzZS5jb22CH3d3dy5lbmxpZ25ldGl0cmVzZGVwcmVzc2Vmci5jb22CJHd3dy5mb3J6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIXd3d3LmdhemV0aWN6YXNvcGlzbS5jb22CIHd3dy5nYXpldHlpY3phc29waXNtYS1jZW50ZXIuY29tgiB3d3cuZ2F6ZXR5aWN6YXNvcGlzbWEtb25saW5lLmNvbYIcd3d3LmdhemV0eWljemFzb3Bpc21hLXBsLmNvbYIZd3d3LmdhemV0eWljemFzb3Bpc21hLmNvbYIdd3d3LmdhemV0eWljemFzb3Bpc21hZmxleC5jb22CHXd3dy5nYXpldHlpY3phc29waXNtYWluZm8uY29tghx3d3cuZ2F6ZXR5aWN6YXNvcGlzbWFtYWcuY29tgh93d3cuZ2F6ZXR5aWN6YXNvcGlzbWFvbmxpbmUuY29tght3d3cuZ2F6ZXR5aWN6YXNvcGlzbWFwbC5jb22CHnd3dy5nYXpldHlpY3phc29waXNtYXBsYWNlLmNvbYIdd3d3LmdhemV0eWljemFzb3Bpc21hcG9zdC5jb22CIHd3dy5nYXpldHlpY3phc29waXNtYXNwb3QtcGwuY29tghx3d3cuZ2F6ZXR5aWN6YXNvcGlzbWF3ZWIuY29tgiB3d3cuZ2F6ZXR5aWN6YXNvcGlzbWF6b25lLXBsLmNvbYIdd3d3LmdhemV0eWljemFzb3Bpc21hem9uZS5jb22CHnd3dy5nYXpldHlpemh1cm5hbHktY2VudGVyLmNvbYIcd3d3LmdhemV0eWl6aHVybmFseS1pbmZvLmNvbYIad3d3LmdhemV0eWl6aHVybmFseS1ydS5jb22CF3d3dy5nYXpldHlpemh1cm5hbHkuY29tght3d3cuZ2F6ZXR5aXpodXJuYWx5aW5mby5jb22CGnd3dy5nYXpldHlpemh1cm5hbHluZXQuY29tghp3d3cuZ2F6ZXR5aXpodXJuYWx5bmV3LmNvbYIdd3d3LmdhemV0eWl6aHVybmFseW9ubGluZS5jb22CG3d3dy5nYXpldHlpemh1cm5hbHlwb3N0LmNvbYIad3d3LmdhemV0eWl6aHVybmFseXdlYi5jb22CGnd3dy5nYXpldHl6aHVybmFseWluZm8uY29tghl3d3cuaGVsbGFzcHJlc3N0aXRsZXMuY29tgiZ3d3cuaGV1dGV6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIed3d3LmhpcmxhcG9rZXNhZm9seW9pcmF0b2suY29tghV3d3cuaGtwcmVzc3RpdGxlcy5jb22CF3d3dy5pbXByZW5zYS1jZW50ZXIuY29tghZ3d3cuaW1wcmVuc2EtZmxhc2guY29tghB3d3cuaW1wcmVuc2EuY29tghR3d3cuaW1wcmVuc2FhcmVhLmNvbYIYd3d3LmltcHJlbnNhYnJhemlsaGQuY29tghh3d3cuaW1wcmVuc2FicmF6aWxocS5jb22CGnd3dy5pbXByZW5zYWJyYXppbGluZm8uY29tghp3d3cuaW1wcmVuc2FicmF6aWxsaXN0LmNvbYIUd3d3LmltcHJlbnNhYnJocS5jb22CFnd3dy5pbXByZW5zYWJyaW5mby5jb22CFnd3dy5pbXByZW5zYWJyc2l0ZS5jb22CFXd3dy5pbXByZW5zYWZpcnN0LmNvbYIVd3d3LmltcHJlbnNhZmxhc2guY29tghR3d3cuaW1wcmVuc2FmbGV4LmNvbYIVd3d3LmltcHJlbnNhZnJlc2guY29tghR3d3cuaW1wcmVuc2Fob2plLmNvbYISd3d3LmltcHJlbnNhaHEuY29tghR3d3cuaW1wcmVuc2FpbmZvLmNvbYIVd3d3LmltcHJlbnNhbG9jYWwuY29tghN3d3cuaW1wcmVuc2FtYWcuY29tghN3d3cuaW1wcmVuc2FuZXQuY29tghR3d3cuaW1wcmVuc2FuZXdzLmNvbYIWd3d3LmltcHJlbnNhb25saW5lLmNvbYIUd3d3LmltcHJlbnNhc3BvdC5jb22CE3d3dy5pbXByZXNhbmV3cy5jb22CIHd3dy5pbmZvcm1hdGlmdGl0cmVzZGVwcmVzc2UuY29tgiN3d3cuaW50ZXJuZWNpZWdhemV0eWljemFzb3Bpc21hLmNvbYIld3d3LmludGVybmV0b3dlamdhemV0eWljemFzb3Bpc21hLmNvbYIYd3d3LmlyaXNocHJlc3N0aXRsZXMuY29tghp3d3cuaXNyYWVsaXByZXNzdGl0bGVzLmNvbYIYd3d3Lmpvcm5haXMtcmV2aXN0YXMuY29tgh93d3cuam9ybmFpc2VyZXZpc3Rhcy1jZW50ZXIuY29tgh93d3cuam9ybmFpc2VyZXZpc3Rhcy1wb3J0YWwuY29tght3d3cuam9ybmFpc2VyZXZpc3Rhcy1wdC5jb22CHHd3dy5qb3JuYWlzZXJldmlzdGFzLXdlYi5jb22CGHd3dy5qb3JuYWlzZXJldmlzdGFzLmNvbYIbd3d3Lmpvcm5haXNlcmV2aXN0YXNtYWcuY29tgh13d3cuam9ybmFpc2VyZXZpc3Rhc21lZGlhLmNvbYIcd3d3Lmpvcm5haXNlcmV2aXN0YXNuZXdzLmNvbYIed3d3Lmpvcm5haXNlcmV2aXN0YXNvbmxpbmUuY29tgh13d3cuam9ybmFpc2VyZXZpc3Rhc3BsYWNlLmNvbYIcd3d3Lmpvcm5haXNlcmV2aXN0YXNwb3N0LmNvbYIcd3d3Lmpvcm5haXNlcmV2aXN0YXN6b25lLmNvbYIWd3d3Lmpvcm5haXNuZXdzLWJyLmNvbYIXd3d3Lmpvcm5haXNyZXZpc3Rhcy5jb22CG3d3dy5qb3VybmF1eGV0bWFnYXppbmVzLmNvbYIfd3d3LmpvdXJuYXV4ZXRtYWdhemluZXNmbGV4LmNvbYIUd3d3LmthdHRlZXRzdW9taS5jb22CF3d3dy5rb3JhbmRhbm1hamFsYWguY29tgiV3d3cua3JhbnRlbmVudGlqZHNjaHJpZnRlbi1jZW50ZXIuY29tgiF3d3cua3JhbnRlbmVudGlqZHNjaHJpZnRlbi1ubC5jb22CHnd3dy5rcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIkd3d3LmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5hZ2VuY3kuY29tgiR3d3cua3JhbnRlbmVudGlqZHNjaHJpZnRlbmRla3NlbC5jb22CInd3dy5rcmFudGVuZW50aWpkc2NocmlmdGVuam91dy5jb22CIXd3dy5rcmFudGVuZW50aWpkc2NocmlmdGVubWFnLmNvbYIhd3d3LmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5uZXQuY29tgiZ3d3cua3JhbnRlbmVudGlqZHNjaHJpZnRlbm5ld2NvdmVyLmNvbYIkd3d3LmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5uaWV1d3MuY29tgiR3d3cua3JhbnRlbmVudGlqZHNjaHJpZnRlbm5sbmV3cy5jb22CInd3dy5rcmFudGVuZW50aWpkc2NocmlmdGVucG9zdC5jb22CFHd3dy5tYWdhc2luZXItbm8uY29tgiV3d3cubWFpbC5ha2hhYmFhcmVlbmF1cnBhdHJpa2FlZW4uY29tgh13d3cubWFpbC5ha2hiYXJkYW5tYWphbGFoLmNvbYIYd3d3Lm1haWwuYWxsbWVkaWEtYXUuY29tghp3d3cubWFpbC5hbGxtZWRpYS1iZWZyLmNvbYIad3d3Lm1haWwuYWxsbWVkaWEtYmVubC5jb22CGHd3dy5tYWlsLmFsbG1lZGlhLWVzLmNvbYIZd3d3Lm1haWwuYWxsbmV3cy1iZWZyLmNvbYIZd3d3Lm1haWwuYWxsbmV3cy1iZW5sLmNvbYIpd3d3Lm1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzLWNlbnRlci5jb22CInd3dy5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CJnd3dy5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc2FyZWEuY29tgiZ3d3cubWFpbC5hdXN0cmFsaWFucHJlc3N0aXRsZXNpbmZvLmNvbYImd3d3Lm1haWwuYXVzdHJhbGlhbnByZXNzdGl0bGVzbWFpbC5jb22CJXd3dy5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc25ldC5jb22CKHd3dy5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc29ubGluZS5jb22CJnd3dy5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc3Bvc3QuY29tgid3d3cubWFpbC5hdXN0cmFsaWFucHJlc3N0aXRsZXN0b2RheS5jb22CKXd3dy5tYWlsLmF1c3RyYWxpYW5wcmVzc3RpdGxlc3VwZGF0ZXMuY29tgiZ3d3cubWFpbC5hdXN0cmFsaWFucHJlc3N0aXRsZXN6b25lLmNvbYIWd3d3Lm1haWwuYXZpc2VyLWRrLmNvbYIhd3d3Lm1haWwuYXZpc2Vyb2dibGFkZS1jZW50ZXIuY29tgh13d3cubWFpbC5hdmlzZXJvZ2JsYWRlLWRrLmNvbYIgd3d3Lm1haWwuYXZpc2Vyb2dibGFkZS13b3JsZC5jb22CH3d3dy5tYWlsLmF2aXNlcm9nYmxhZGUtem9uZS5jb22CGnd3dy5tYWlsLmF2aXNlcm9nYmxhZGUuY29tgh53d3cubWFpbC5hdmlzZXJvZ2JsYWRlZmxleC5jb22CHnd3dy5tYWlsLmF2aXNlcm9nYmxhZGVpbmZvLmNvbYInd3d3Lm1haWwuYXZpc2Vyb2dibGFkZWtvbW11bmlrYXRpb24uY29tgh13d3cubWFpbC5hdmlzZXJvZ2JsYWRlbWFnLmNvbYIfd3d3Lm1haWwuYXZpc2Vyb2dibGFkZW1lZGlhLmNvbYIdd3d3Lm1haWwuYXZpc2Vyb2dibGFkZW5ldy5jb22CHnd3dy5tYWlsLmF2aXNlcm9nYmxhZGVwb3N0LmNvbYIid3d3Lm1haWwuYXZpc2Vyb2dibGFkZXItY2VudGVyLmNvbYIgd3d3Lm1haWwuYXZpc2Vyb2dibGFkZXItem9uZS5jb22CG3d3dy5tYWlsLmF2aXNlcm9nYmxhZGVyLmNvbYIfd3d3Lm1haWwuYXZpc2Vyb2dibGFkZXJmbGV4LmNvbYIed3d3Lm1haWwuYXZpc2Vyb2dibGFkZXJtYWcuY29tgiB3d3cubWFpbC5hdmlzZXJvZ2JsYWRlcm1lZGlhLmNvbYIhd3d3Lm1haWwuYXZpc2Vyb2dibGFkZXJvbmxpbmUuY29tgh93d3cubWFpbC5hdmlzZXJvZ2JsYWRlcnBvc3QuY29tgiJ3d3cubWFpbC5hdmlzZXJvZ2JsYWRlcnVwZGF0ZXMuY29tgh53d3cubWFpbC5hdmlzZXJvZ2JsYWRlcndlYi5jb22CHnd3dy5tYWlsLmF2aXNlcm9nYmxhZGVzaXRlLmNvbYIed3d3Lm1haWwuY2FuYWRhcHJlc3N0aXRsZXMuY29tghh3d3cubWFpbC5jYXBhc2JyYXppbC5jb22CKHd3dy5tYWlsLmNvZHppZW5uaWVnYXpldHlpY3phc29waXNtYS5jb22CInd3dy5tYWlsLmNvdmVydGl0cmVzZGVwcmVzc2VubC5jb22CLHd3dy5tYWlsLmRhZ2VsaWprc2tyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgiZ3d3cubWFpbC5kYWdrcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYInd3d3Lm1haWwuZGFpbHlhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgiV3d3cubWFpbC5kYXlhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgh53d3cubWFpbC5kYXlnYXpldHl6aHVybmFseS5jb22CK3d3dy5tYWlsLmRlLWZwemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CK3d3dy5tYWlsLmRlZnAtemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CKnd3dy5tYWlsLmRlZnB6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIrd3d3Lm1haWwuZGVpbmV6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIqd3d3Lm1haWwuZGlnaXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiZ3d3cubWFpbC5kemllbm5pa2dhemV0eWljemFzb3Bpc21hLmNvbYIid3d3Lm1haWwuZW5saWduZXRpdHJlc2RlcHJlc3NlLmNvbYIpd3d3Lm1haWwuZm9yemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CHHd3dy5tYWlsLmdhemV0aWN6YXNvcGlzbS5jb22CJXd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hLWNlbnRlci5jb22CJXd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hLW9ubGluZS5jb22CIXd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hLXBsLmNvbYIed3d3Lm1haWwuZ2F6ZXR5aWN6YXNvcGlzbWEuY29tgiJ3d3cubWFpbC5nYXpldHlpY3phc29waXNtYWZsZXguY29tgiJ3d3cubWFpbC5nYXpldHlpY3phc29waXNtYWluZm8uY29tgiF3d3cubWFpbC5nYXpldHlpY3phc29waXNtYW1hZy5jb22CJHd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hb25saW5lLmNvbYIjd3d3Lm1haWwuZ2F6ZXR5aWN6YXNvcGlzbWFwbGFjZS5jb22CInd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hcG9zdC5jb22CJXd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hc3BvdC1wbC5jb22CIXd3dy5tYWlsLmdhemV0eWljemFzb3Bpc21hd2ViLmNvbYIld3d3Lm1haWwuZ2F6ZXR5aWN6YXNvcGlzbWF6b25lLXBsLmNvbYIid3d3Lm1haWwuZ2F6ZXR5aWN6YXNvcGlzbWF6b25lLmNvbYIjd3d3Lm1haWwuZ2F6ZXR5aXpodXJuYWx5LWNlbnRlci5jb22CH3d3dy5tYWlsLmdhemV0eWl6aHVybmFseS1ydS5jb22CHHd3dy5tYWlsLmdhemV0eWl6aHVybmFseS5jb22CIHd3dy5tYWlsLmdhemV0eWl6aHVybmFseWluZm8uY29tgh93d3cubWFpbC5nYXpldHlpemh1cm5hbHluZXQuY29tgh93d3cubWFpbC5nYXpldHlpemh1cm5hbHluZXcuY29tgiB3d3cubWFpbC5nYXpldHlpemh1cm5hbHlwb3N0LmNvbYIfd3d3Lm1haWwuZ2F6ZXR5aXpodXJuYWx5d2ViLmNvbYIfd3d3Lm1haWwuZ2F6ZXR5emh1cm5hbHlpbmZvLmNvbYIed3d3Lm1haWwuaGVsbGFzcHJlc3N0aXRsZXMuY29tgit3d3cubWFpbC5oZXV0ZXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiN3d3cubWFpbC5oaXJsYXBva2VzYWZvbHlvaXJhdG9rLmNvbYIad3d3Lm1haWwuaGtwcmVzc3RpdGxlcy5jb22CHHd3dy5tYWlsLmltcHJlbnNhLWNlbnRlci5jb22CFXd3dy5tYWlsLmltcHJlbnNhLmNvbYIZd3d3Lm1haWwuaW1wcmVuc2FhcmVhLmNvbYIfd3d3Lm1haWwuaW1wcmVuc2FicmF6aWxpbmZvLmNvbYIfd3d3Lm1haWwuaW1wcmVuc2FicmF6aWxsaXN0LmNvbYIZd3d3Lm1haWwuaW1wcmVuc2FicmhxLmNvbYIbd3d3Lm1haWwuaW1wcmVuc2FicmluZm8uY29tght3d3cubWFpbC5pbXByZW5zYWJyc2l0ZS5jb22CGnd3dy5tYWlsLmltcHJlbnNhZmlyc3QuY29tghp3d3cubWFpbC5pbXByZW5zYWZsYXNoLmNvbYIZd3d3Lm1haWwuaW1wcmVuc2FmbGV4LmNvbYIad3d3Lm1haWwuaW1wcmVuc2FmcmVzaC5jb22CGXd3dy5tYWlsLmltcHJlbnNhaG9qZS5jb22CF3d3dy5tYWlsLmltcHJlbnNhaHEuY29tghl3d3cubWFpbC5pbXByZW5zYWluZm8uY29tghp3d3cubWFpbC5pbXByZW5zYWxvY2FsLmNvbYIYd3d3Lm1haWwuaW1wcmVuc2FtYWcuY29tghh3d3cubWFpbC5pbXByZW5zYW5ldC5jb22CGXd3dy5tYWlsLmltcHJlbnNhbmV3cy5jb22CG3d3dy5tYWlsLmltcHJlbnNhb25saW5lLmNvbYIZd3d3Lm1haWwuaW1wcmVuc2FzcG90LmNvbYIYd3d3Lm1haWwuaW1wcmVzYW5ld3MuY29tgiV3d3cubWFpbC5pbmZvcm1hdGlmdGl0cmVzZGVwcmVzc2UuY29tgih3d3cubWFpbC5pbnRlcm5lY2llZ2F6ZXR5aWN6YXNvcGlzbWEuY29tgh13d3cubWFpbC5pcmlzaHByZXNzdGl0bGVzLmNvbYIfd3d3Lm1haWwuaXNyYWVsaXByZXNzdGl0bGVzLmNvbYIdd3d3Lm1haWwuam9ybmFpcy1yZXZpc3Rhcy5jb22CJHd3dy5tYWlsLmpvcm5haXNlcmV2aXN0YXMtY2VudGVyLmNvbYIkd3d3Lm1haWwuam9ybmFpc2VyZXZpc3Rhcy1wb3J0YWwuY29tgiB3d3cubWFpbC5qb3JuYWlzZXJldmlzdGFzLXB0LmNvbYIhd3d3Lm1haWwuam9ybmFpc2VyZXZpc3Rhcy13ZWIuY29tgh13d3cubWFpbC5qb3JuYWlzZXJldmlzdGFzLmNvbYIgd3d3Lm1haWwuam9ybmFpc2VyZXZpc3Rhc21hZy5jb22CInd3dy5tYWlsLmpvcm5haXNlcmV2aXN0YXNtZWRpYS5jb22CIXd3dy5tYWlsLmpvcm5haXNlcmV2aXN0YXNuZXdzLmNvbYIjd3d3Lm1haWwuam9ybmFpc2VyZXZpc3Rhc29ubGluZS5jb22CInd3dy5tYWlsLmpvcm5haXNlcmV2aXN0YXNwbGFjZS5jb22CIXd3dy5tYWlsLmpvcm5haXNlcmV2aXN0YXNwb3N0LmNvbYIhd3d3Lm1haWwuam9ybmFpc2VyZXZpc3Rhc3pvbmUuY29tght3d3cubWFpbC5qb3JuYWlzbmV3cy1ici5jb22CHHd3dy5tYWlsLmpvcm5haXNyZXZpc3Rhcy5jb22CIHd3dy5tYWlsLmpvdXJuYXV4ZXRtYWdhemluZXMuY29tgiR3d3cubWFpbC5qb3VybmF1eGV0bWFnYXppbmVzZmxleC5jb22CGXd3dy5tYWlsLmthdHRlZXRzdW9taS5jb22CHHd3dy5tYWlsLmtvcmFuZGFubWFqYWxhaC5jb22CKnd3dy5tYWlsLmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4tY2VudGVyLmNvbYImd3d3Lm1haWwua3JhbnRlbmVudGlqZHNjaHJpZnRlbi1ubC5jb22CI3d3dy5tYWlsLmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgil3d3cubWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVuYWdlbmN5LmNvbYImd3d3Lm1haWwua3JhbnRlbmVudGlqZHNjaHJpZnRlbm1hZy5jb22CJnd3dy5tYWlsLmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5uZXQuY29tgil3d3cubWFpbC5rcmFudGVuZW50aWpkc2NocmlmdGVubmlldXdzLmNvbYIpd3d3Lm1haWwua3JhbnRlbmVudGlqZHNjaHJpZnRlbm5sbmV3cy5jb22CJ3d3dy5tYWlsLmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW5wb3N0LmNvbYIZd3d3Lm1haWwubWFnYXNpbmVyLW5vLmNvbYIhd3d3Lm1haWwubWFpbG1hbmF2aXNlcm9nYmxhZGUuY29tgiJ3d3cubWFpbC5tYWlsbWFuYXZpc2Vyb2dibGFkZXIuY29tghx3d3cubWFpbC5tYWlsbWFuaW1wcmVuc2EuY29tgiR3d3cubWFpbC5tYWlsbWFuam9ybmFpc2VyZXZpc3Rhcy5jb22CJ3d3dy5tYWlsLm1haWxtYW5qb3VybmF1eGV0bWFnYXppbmVzLmNvbYIkd3d3Lm1haWwubWFpbG1hbnBvcnRhZGFzZGVwcmVuc2EuY29tgh93d3cubWFpbC5tYWlsbWFucHJlc3N0aXRsZXMuY29tgiJ3d3cubWFpbC5tYWlsbWFudGl0cmVzZGVwcmVzc2UuY29tghd3d3cubWFpbC5tZWRpYW5ld2RlLmNvbYIXd3d3Lm1haWwubWVkaWFuZXdubC5jb22CGXd3dy5tYWlsLm1lZGlhbmV3cy1ici5jb22CGXd3dy5tYWlsLm1lZGlhbmV3cy1pdC5jb22CG3d3dy5tYWlsLm1lZGlhcG9ydGFsLWl0LmNvbYIbd3d3Lm1haWwubWVkaWFwb3J0YWwtcGwuY29tghl3d3cubWFpbC5tZWRpYXpvbmUtYXUuY29tght3d3cubWFpbC5tZWRpYXpvbmUtYmVubC5jb22CGXd3dy5tYWlsLm1lZGlhem9uZS1wbC5jb22CGXd3dy5tYWlsLm1lZGlhem9uZS1wdC5jb22CGXd3dy5tYWlsLm1lZGlhem9uZS1ydS5jb22CG3d3dy5tYWlsLm1lZGlldGFja2VyLXN3LmNvbYIed3d3Lm1haWwubWVkaWV0aWRuaW5nYXItc3cuY29tgiB3d3cubWFpbC5tb25kZXRpdHJlc2RlcHJlc3NlLmNvbYIdd3d3Lm1haWwubXlnYXpldHl6aHVybmFseS5jb22CKXd3dy5tYWlsLm5ldXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiV3d3cubWFpbC5uZXdhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgiF3d3cubWFpbC5uZXduby1hdmlzZXJvZ2JsYWRlci5jb22CJnd3dy5tYWlsLm5ld3NhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tghl3d3cubWFpbC5uZXdzbWVkaWEtYXUuY29tght3d3cubWFpbC5uZXdzbWVkaWEtYmVubC5jb22CGXd3dy5tYWlsLm5ld3NtZWRpYS1kZS5jb22CGXd3dy5tYWlsLm5ld3NtZWRpYS1maS5jb22CGXd3dy5tYWlsLm5ld3NtZWRpYS1pdC5jb22CGXd3dy5tYWlsLm5ld3NtZWRpYS1wbC5jb22CGXd3dy5tYWlsLm5ld3NtZWRpYS1wdC5jb22CIHd3dy5tYWlsLm5ld3RpdHJlc2RlcHJlc3NlbmwuY29tgil3d3cubWFpbC5uZXd6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIld3d3Lm1haWwubmxrcmFudGVuZW50aWpkc2NocmlmdGVuLmNvbYIed3d3Lm1haWwubm8tYXZpc2Vyb2dibGFkZXIuY29tgiR3d3cubWFpbC5ub3V2ZWxsZXN0aXRyZXNkZXByZXNzZS5jb22CG3d3dy5tYWlsLm5vdmluYWNhc29waXN1LmNvbYIid3d3Lm1haWwubm93eWdhemV0eWljemFzb3Bpc21hLmNvbYIhd3d3Lm1haWwubnloZWRlcmF2aXNlcm9nYmxhZGUuY29tgh13d3cubWFpbC5ueWhlZGVybWFnYXNpbmVyLmNvbYIad3d3Lm1haWwubnpwcmVzc3RpdGxlcy5jb22CGHd3dy5tYWlsLm9ubWVkaWFiZWZyLmNvbYIYd3d3Lm1haWwub25tZWRpYWJlbmwuY29tghZ3d3cubWFpbC5vbm1lZGlhYnIuY29tghZ3d3cubWFpbC5vbm1lZGlhZmkuY29tghZ3d3cubWFpbC5vbm1lZGlhaXQuY29tghZ3d3cubWFpbC5vbm1lZGlhcnUuY29tghZ3d3cubWFpbC5vbm1lZGlhc2UuY29tgih3d3cubWFpbC5vbnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgih3d3cubWFpbC5vcnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgh93d3cubWFpbC5wYWhheWFnYW5hdG1hZ2FzaW4uY29tghl3d3cubWFpbC5wb2xhbmQtbWVkaWEuY29tgh93d3cubWFpbC5wb3J0YWRhc2FyZ2VudGluYXMuY29tgiB3d3cubWFpbC5wb3J0YWRhc2NvbG9tYmlhbmFzLmNvbYIcd3d3Lm1haWwucG9ydGFkYXNkZWNoaWxlLmNvbYIed3d3Lm1haWwucG9ydGFkYXNkZWVjdWFkb3IuY29tght3d3cubWFpbC5wb3J0YWRhc2RlcGVydS5jb22CIXd3dy5tYWlsLnBvcnRhZGFzZGVwcmVuc2EtZGF5LmNvbYIgd3d3Lm1haWwucG9ydGFkYXNkZXByZW5zYS1lcy5jb22CJHd3dy5tYWlsLnBvcnRhZGFzZGVwcmVuc2Etb25saW5lLmNvbYIdd3d3Lm1haWwucG9ydGFkYXNkZXByZW5zYS5jb22CH3d3dy5tYWlsLnBvcnRhZGFzZGVwcmVuc2FoZC5jb22CIHd3dy5tYWlsLnBvcnRhZGFzZGVwcmVuc2FtYWcuY29tgiJ3d3cubWFpbC5wb3J0YWRhc2RlcHJlbnNhbWVkaWEuY29tgiB3d3cubWFpbC5wb3J0YWRhc2RlcHJlbnNhbmV0LmNvbYIid3d3Lm1haWwucG9ydGFkYXNkZXByZW5zYXBsYWNlLmNvbYIhd3d3Lm1haWwucG9ydGFkYXNkZXByZW5zYXBvc3QuY29tgiF3d3cubWFpbC5wb3J0YWRhc2RlcHJlbnNhc2l0ZS5jb22CIHd3dy5tYWlsLnBvcnRhZGFzZGVwcmVuc2F3ZWIuY29tgiB3d3cubWFpbC5wb3J0YWRhc2RldmVuZXp1ZWxhLmNvbYIed3d3Lm1haWwucG9ydGFkYXNtZXhpY2FuYXMuY29tgiZ3d3cubWFpbC5wb3J0YWxlZGVsbGFzdGFtcGEtY2VudGVyLmNvbYIfd3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhLmNvbYIjd3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhYXJlYS5jb22CI3d3dy5tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWZsZXguY29tgiN3d3cubWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFpbmZvLmNvbYIod3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlpbmZvLmNvbYIod3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlsaXN0LmNvbYIqd3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlvbmxpbmUuY29tgid3d3cubWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseXdlYi5jb22CKXd3dy5tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYWl0YWx5d29ybGQuY29tgiN3d3cubWFpbC5wb3J0YWxlZGVsbGFzdGFtcGFpdGhkLmNvbYIid3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhbWFnLmNvbYIjd3d3Lm1haWwucG9ydGFsZWRlbGxhc3RhbXBhbmV3cy5jb22CJXd3dy5tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYW9ubGluZS5jb22CI3d3dy5tYWlsLnBvcnRhbGVkZWxsYXN0YW1wYXNpdGUuY29tgiJ3d3cubWFpbC5wb3J0YWxlZGVsbGFzdGFtcGF3ZWIuY29tgiN3d3cubWFpbC5wb3J0YWxlZGVsbGFzdGFtcGF6b25lLmNvbYIbd3d3Lm1haWwucG9ydGFsbWVkaWEtaXQuY29tghl3d3cubWFpbC5wb3J0YWxzdGFtcGEuY29tghl3d3cubWFpbC5wb3J0YWx3ZWItYmUuY29tghl3d3cubWFpbC5wb3J0YWx3ZWItaXQuY29tghp3d3cubWFpbC5wb3J0YWx6b25lLWJlLmNvbYIad3d3Lm1haWwucG9zdG5ld3MtYmVmci5jb22CGnd3dy5tYWlsLnBvc3RuZXdzLWJlbmwuY29tghx3d3cubWFpbC5wcmVzYXJvbWFuZWFzY2EuY29tghh3d3cubWFpbC5wcmVzc2V0aXRlbC5jb22CGHd3dy5tYWlsLnByZXNzdGl0bGVzLmNvbYIcd3d3Lm1haWwucHJlc3N0aXRsZXNmbGV4LmNvbYIbd3d3Lm1haWwucHJlc3N0aXRsZXNtYWcuY29tghx3d3cubWFpbC5wcmVzc3RpdGxlc25ld3MuY29tgiB3d3cubWFpbC5wcmVzc3RpdGxlc25ld3NpbmZvLmNvbYIfd3d3Lm1haWwucHJlc3N0aXRsZXNuZXdzd2ViLmNvbYIcd3d3Lm1haWwucHJlc3N0aXRsZXNwb3N0LmNvbYIfd3d3Lm1haWwucHJlc3N0aXRsZXN6b25lLXVrLmNvbYIcd3d3Lm1haWwucHJlc3N0aXRsZXN6b25lLmNvbYIod3d3Lm1haWwucHJvbW9zbWFpbG1hbnRpdHJlc2RlcHJlc3NlLmNvbYIbd3d3Lm1haWwucmV2aXN0YXNicmF6aWwuY29tghx3d3cubWFpbC5yZXZpc3Rhc25ld3MtYnIuY29tgit3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldC1jZW50ZXIuY29tgiR3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldC5jb22CL3d3dy5tYWlsLnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0ZW5zaW1tYWluZW4uY29tgih3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldGZsZXguY29tgip3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldG9ubGluZS5jb22CL3d3dy5tYWlsLnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0cGFpa2FsbGluZW4uY29tgih3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldHBvc3QuY29tgip3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldHNhbGFtYS5jb22CKXd3dy5tYWlsLnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0dHVvcmUuY29tgih3d3cubWFpbC5zYW5vbWEtamFhaWtha2F1c2xlaGRldHV1c2kuY29tghp3d3cubWFpbC5zYXByZXNzdGl0bGVzLmNvbYIjd3d3Lm1haWwuc2F1ZGlhcmFiaWFwcmVzc3RpdGxlcy5jb22CHHd3dy5tYWlsLnNjaHdlaXplcnByZXNzZS5jb22CIXd3dy5tYWlsLnNpbmdhcG9yZXByZXNzdGl0bGVzLmNvbYImd3d3Lm1haWwuc2luZ2Fwb3JlcHJlc3N0aXRsZXNwbGFjZS5jb22CInd3dy5tYWlsLnNvdXRoa29yZWFwcmVzc3RpdGxlcy5jb22CGXd3dy5tYWlsLnNwb3RtZWRpYS1wbC5jb22CGnd3dy5tYWlsLnN0YW1wYW5ld3MtaXQuY29tghp3d3cubWFpbC5zdmVyaWdldGFja2VyLmNvbYIjd3d3Lm1haWwuc3dpYXRnYXpldHlpY3phc29waXNtYS5jb22CLXd3dy5tYWlsLnRhZ2xpY2h6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIpd3d3Lm1haWwudGFnemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CGnd3dy5tYWlsLnRlc3RlZG9tYWlucGwuY29tgix3d3cubWFpbC50aGV6ZWl0dW5nZW51bmR6ZWl0c2Nocml0ZW56b25lLmNvbYIgd3d3Lm1haWwudGlkbmluZ2FybnloZXRlci1zdy5jb22CK3d3dy5tYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyLWNlbnRlci5jb22CJHd3dy5tYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyLmNvbYIpd3d3Lm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJibGl4dC5jb22CKHd3dy5tYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyZmxleC5jb22CKnd3dy5tYWlsLnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyZm9yc3RhLmNvbYIod3d3Lm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJpZGFnLmNvbYIod3d3Lm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJpbmZvLmNvbYInd3d3Lm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJuZXQuY29tgiZ3d3cubWFpbC50aWRuaW5nYXJvY2h0aWRza3JpZnRlcm55LmNvbYInd3d3Lm1haWwudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJ3ZWIuY29tgiN3d3cubWFpbC50aWpkc2NocmlmdGVuZW5rcmFudGVuLmNvbYIWd3d3Lm1haWwudGl0bGVzLXVrLmNvbYIbd3d3Lm1haWwudGl0cmVzZGVwcmVzc2UuY29tgiF3d3cubWFpbC50aXRyZXNkZXByZXNzZWJlbmxocS5jb22CI3d3dy5tYWlsLnRpdHJlc2RlcHJlc3NlYmVubGluZm8uY29tgiN3d3cubWFpbC50aXRyZXNkZXByZXNzZWJlbmxsaW5rLmNvbYIjd3d3Lm1haWwudGl0cmVzZGVwcmVzc2ViZW5sbGlzdC5jb22CI3d3dy5tYWlsLnRpdHJlc2RlcHJlc3NlYmVubHNpdGUuY29tgiB3d3cubWFpbC50aXRyZXNkZXByZXNzZWNvdmVyLmNvbYIkd3d3Lm1haWwudGl0cmVzZGVwcmVzc2Vmci1jZW50ZXIuY29tgiJ3d3cubWFpbC50aXRyZXNkZXByZXNzZWZyLW1haWwuY29tgiR3d3cubWFpbC50aXRyZXNkZXByZXNzZWZyLW9ubGluZS5jb22CIXd3dy5tYWlsLnRpdHJlc2RlcHJlc3NlZnItd2ViLmNvbYIjd3d3Lm1haWwudGl0cmVzZGVwcmVzc2VmcmFnZW5jeS5jb22CIHd3dy5tYWlsLnRpdHJlc2RlcHJlc3NlZnJuZXQuY29tgiN3d3cubWFpbC50aXRyZXNkZXByZXNzZWZyb25saW5lLmNvbYIhd3d3Lm1haWwudGl0cmVzZGVwcmVzc2VmcnBvc3QuY29tgiF3d3cubWFpbC50aXRyZXNkZXByZXNzZWZyem9uZS5jb22CHnd3dy5tYWlsLnRpdHJlc2RlcHJlc3NlbWFnLmNvbYIhd3d3Lm1haWwudGl0cmVzZGVwcmVzc2VtYWlsZnIuY29tgiR3d3cubWFpbC50aXRyZXNkZXByZXNzZW5sLWNlbnRlci5jb22CInd3dy5tYWlsLnRpdHJlc2RlcHJlc3Nlbmxjb3Zlci5jb22CIXd3dy5tYWlsLnRpdHJlc2RlcHJlc3NlbmxuZXdzLmNvbYIjd3d3Lm1haWwudGl0cmVzZGVwcmVzc2VubG9ubGluZS5jb22CIXd3dy5tYWlsLnRpdHJlc2RlcHJlc3Nlbmxwb3N0LmNvbYIhd3d3Lm1haWwudGl0cmVzZGVwcmVzc2VubHNpdGUuY29tgiF3d3cubWFpbC50aXRyZXNkZXByZXNzZW5sem9uZS5jb22CJ3d3dy5tYWlsLnRvZGF5YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIad3d3Lm1haWwudG9kYXltZWRpYS1kZS5jb22CFnd3dy5tYWlsLnR1cmtiYXNpbi5jb22CG3d3dy5tYWlsLnVhZXByZXNzdGl0bGVzLmNvbYIbd3d3Lm1haWwudWstbWVkaWF0aXRsZXMuY29tghl3d3cubWFpbC51ay1zcG90bWVkaWEuY29tght3d3cubWFpbC51a2Nsb3VkY29udGVudC5jb22CG3d3dy5tYWlsLnVzYXByZXNzdGl0bGVzLmNvbYIfd3d3Lm1haWwudmlldG5hbXByZXNzdGl0bGVzLmNvbYIid3d3Lm1haWwud2VsY29tZWF2aXNlcm9nYmxhZGVyLmNvbYIkd3d3Lm1haWwud2VsY29tZWpvcm5haXNlcmV2aXN0YXMuY29tgiR3d3cubWFpbC53ZWxjb21lcG9ydGFkYXNkZXByZW5zYS5jb22CJnd3dy5tYWlsLndlbGNvbWVwb3J0YWxlZGVsbGFzdGFtcGEuY29tghx3d3cubWFpbC53ZWxjb21lcHJlc3MtdWsuY29tgh93d3cubWFpbC53ZWxjb21lcHJlc3N0aXRsZXMuY29tgit3d3cubWFpbC53ZWxjb21lc2Fub21hLWphYWlrYWthdXNsZWhkZXQuY29tgit3d3cubWFpbC53ZWxjb21ldGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXIuY29tgiJ3d3cubWFpbC53ZWxjb21ldGl0cmVzZGVwcmVzc2UuY29tgi13d3cubWFpbC53ZWxjb21lemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CGHd3dy5tYWlsLndvcmttZWRpYWJyLmNvbYIYd3d3Lm1haWwud29ya21lZGlhZGUuY29tghh3d3cubWFpbC53b3JrbWVkaWFmaS5jb22CGHd3dy5tYWlsLndvcmttZWRpYWl0LmNvbYIdd3d3Lm1haWwud29ybGRwcmVzc3RpdGxlcy5jb22CHXd3dy5tYWlsLndvcmxkcHJlc3N0aXRsZXMueHl6giZ3d3cubWFpbC55b3VyYXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYItd3d3Lm1haWwuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi1jZW50ZXIuY29tgil3d3cubWFpbC56ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLWRlLmNvbYImd3d3Lm1haWwuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CKnd3dy5tYWlsLnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW5pbmZvLmNvbYIpd3d3Lm1haWwuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbm5ldC5jb22CG3d3dy5tYWlsLnpvbmVtZWRpYS1iZWZyLmNvbYIbd3d3Lm1haWwuem9uZW1lZGlhLWJlbmwuY29tghx3d3cubWFpbG1hbmF2aXNlcm9nYmxhZGUuY29tgh13d3cubWFpbG1hbmF2aXNlcm9nYmxhZGVyLmNvbYIXd3d3Lm1haWxtYW5pbXByZW5zYS5jb22CH3d3dy5tYWlsbWFuam9ybmFpc2VyZXZpc3Rhcy5jb22CInd3dy5tYWlsbWFuam91cm5hdXhldG1hZ2F6aW5lcy5jb22CH3d3dy5tYWlsbWFucG9ydGFkYXNkZXByZW5zYS5jb22CIXd3dy5tYWlsbWFucG9ydGFsZWRlbGxhc3RhbXBhLmNvbYIad3d3Lm1haWxtYW5wcmVzc3RpdGxlcy5jb22CHXd3dy5tYWlsbWFudGl0cmVzZGVwcmVzc2UuY29tghJ3d3cubWVkaWFuZXdkZS5jb22CEnd3dy5tZWRpYW5ld25sLmNvbYIUd3d3Lm1lZGlhbmV3cy1ici5jb22CFHd3dy5tZWRpYW5ld3MtaXQuY29tghZ3d3cubWVkaWFwb3J0YWwtaXQuY29tghZ3d3cubWVkaWFwb3J0YWwtcGwuY29tghR3d3cubWVkaWF6b25lLWF1LmNvbYIWd3d3Lm1lZGlhem9uZS1iZW5sLmNvbYIUd3d3Lm1lZGlhem9uZS1wbC5jb22CFHd3dy5tZWRpYXpvbmUtcHQuY29tghR3d3cubWVkaWF6b25lLXJ1LmNvbYIWd3d3Lm1lZGlldGFja2VyLXN3LmNvbYIZd3d3Lm1lZGlldGlkbmluZ2FyLXN3LmNvbYIbd3d3Lm1lZGlldGlkc2tyaWZ0ZXItc3cuY29tght3d3cubW9uZGV0aXRyZXNkZXByZXNzZS5jb22CGHd3dy5teWdhemV0eXpodXJuYWx5LmNvbYIkd3d3Lm5ldXplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghx3d3cubmV3LW5vYXZpc2Vyb2dibGFkZXIuY29tgiB3d3cubmV3YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIcd3d3Lm5ld25vLWF2aXNlcm9nYmxhZGVyLmNvbYIbd3d3Lm5ld25vYXZpc2Vyb2dibGFkZXIuY29tgiF3d3cubmV3c2F1c3RyYWxpYW5wcmVzc3RpdGxlcy5jb22CFHd3dy5uZXdzbWVkaWEtYXUuY29tghZ3d3cubmV3c21lZGlhLWJlbmwuY29tghR3d3cubmV3c21lZGlhLWRlLmNvbYIUd3d3Lm5ld3NtZWRpYS1maS5jb22CFHd3dy5uZXdzbWVkaWEtaXQuY29tghR3d3cubmV3c21lZGlhLXBsLmNvbYIUd3d3Lm5ld3NtZWRpYS1wdC5jb22CHHd3dy5uZXdzdGl0cmVzZGVwcmVzc2VubC5jb22CG3d3dy5uZXd0aXRyZXNkZXByZXNzZW5sLmNvbYIkd3d3Lm5ld3plaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgh93d3cubmlldXdzLXRpdHJlc2RlcHJlc3NlbmwuY29tgiR3d3cubmlldXdza3JhbnRlbmVudGlqZHNjaHJpZnRlbi5jb22CIHd3dy5ubGtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tghx3d3cubmx0aXRyZXNkZXByZXNzZWxpbmsuY29tghx3d3cubmx0aXRyZXNkZXByZXNzZWxpc3QuY29tghl3d3cubm8tYXZpc2Vyb2dibGFkZXIuY29tght3d3cubm9hdmlzZXJvZ2JsYWRlci1mcC5jb22CH3d3dy5ub3V2ZWxsZXN0aXRyZXNkZXByZXNzZS5jb22CIXd3dy5ub3V2ZWxsZXN0aXRyZXNkZXByZXNzZWZyLmNvbYIWd3d3Lm5vdmluYWNhc29waXN1LmNvbYIdd3d3Lm5vd3lnYXpldHlpY3phc29waXNtYS5jb22CHHd3dy5ueWhlZGVyYXZpc2Vyb2dibGFkZS5jb22CGHd3dy5ueWhlZGVybWFnYXNpbmVyLmNvbYIVd3d3Lm56cHJlc3N0aXRsZXMuY29tgiN3d3cub25saW5lYXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYITd3d3Lm9ubWVkaWFiZWZyLmNvbYITd3d3Lm9ubWVkaWFiZW5sLmNvbYIRd3d3Lm9ubWVkaWFici5jb22CEXd3dy5vbm1lZGlhZGUuY29tghF3d3cub25tZWRpYWZpLmNvbYIRd3d3Lm9ubWVkaWFpdC5jb22CEXd3dy5vbm1lZGlhcnUuY29tghF3d3cub25tZWRpYXNlLmNvbYIjd3d3Lm9uemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CI3d3dy5vcnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tghp3d3cucGFoYXlhZ2FuYXRtYWdhc2luLmNvbYIUd3d3LnBvbGFuZC1tZWRpYS5jb22CGnd3dy5wb3J0YWRhc2FyZ2VudGluYXMuY29tght3d3cucG9ydGFkYXNjb2xvbWJpYW5hcy5jb22CF3d3dy5wb3J0YWRhc2RlY2hpbGUuY29tghl3d3cucG9ydGFkYXNkZWVjdWFkb3IuY29tghZ3d3cucG9ydGFkYXNkZXBlcnUuY29tghx3d3cucG9ydGFkYXNkZXByZW5zYS1kYXkuY29tght3d3cucG9ydGFkYXNkZXByZW5zYS1lcy5jb22CH3d3dy5wb3J0YWRhc2RlcHJlbnNhLW9ubGluZS5jb22CGHd3dy5wb3J0YWRhc2RlcHJlbnNhLmNvbYIad3d3LnBvcnRhZGFzZGVwcmVuc2FoZC5jb22CG3d3dy5wb3J0YWRhc2RlcHJlbnNhbWFnLmNvbYIdd3d3LnBvcnRhZGFzZGVwcmVuc2FtZWRpYS5jb22CG3d3dy5wb3J0YWRhc2RlcHJlbnNhbmV0LmNvbYIdd3d3LnBvcnRhZGFzZGVwcmVuc2FwbGFjZS5jb22CHHd3dy5wb3J0YWRhc2RlcHJlbnNhcG9zdC5jb22CHHd3dy5wb3J0YWRhc2RlcHJlbnNhc2l0ZS5jb22CG3d3dy5wb3J0YWRhc2RlcHJlbnNhd2ViLmNvbYIbd3d3LnBvcnRhZGFzZGV2ZW5lenVlbGEuY29tghl3d3cucG9ydGFkYXNtZXhpY2FuYXMuY29tgiF3d3cucG9ydGFsZWRlbGxhc3RhbXBhLWNlbnRlci5jb22CGnd3dy5wb3J0YWxlZGVsbGFzdGFtcGEuY29tgh53d3cucG9ydGFsZWRlbGxhc3RhbXBhYXJlYS5jb22CHnd3dy5wb3J0YWxlZGVsbGFzdGFtcGFmbGV4LmNvbYIed3d3LnBvcnRhbGVkZWxsYXN0YW1wYWluZm8uY29tgiF3d3cucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlocS5jb22CI3d3dy5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseWluZm8uY29tgiN3d3cucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHlsaW5rLmNvbYIjd3d3LnBvcnRhbGVkZWxsYXN0YW1wYWl0YWx5bGlzdC5jb22CInd3dy5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseW5ldC5jb22CJXd3dy5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseW9ubGluZS5jb22CI3d3dy5wb3J0YWxlZGVsbGFzdGFtcGFpdGFseXNpdGUuY29tgiJ3d3cucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHl3ZWIuY29tgiR3d3cucG9ydGFsZWRlbGxhc3RhbXBhaXRhbHl3b3JsZC5jb22CHnd3dy5wb3J0YWxlZGVsbGFzdGFtcGFpdGhkLmNvbYIdd3d3LnBvcnRhbGVkZWxsYXN0YW1wYW1hZy5jb22CHnd3dy5wb3J0YWxlZGVsbGFzdGFtcGFuZXdzLmNvbYIgd3d3LnBvcnRhbGVkZWxsYXN0YW1wYW9ubGluZS5jb22CHnd3dy5wb3J0YWxlZGVsbGFzdGFtcGFzaXRlLmNvbYIdd3d3LnBvcnRhbGVkZWxsYXN0YW1wYXdlYi5jb22CHnd3dy5wb3J0YWxlZGVsbGFzdGFtcGF6b25lLmNvbYIWd3d3LnBvcnRhbG1lZGlhLWl0LmNvbYIUd3d3LnBvcnRhbHN0YW1wYS5jb22CFHd3dy5wb3J0YWx3ZWItYmUuY29tghR3d3cucG9ydGFsd2ViLWl0LmNvbYIVd3d3LnBvcnRhbHpvbmUtYmUuY29tghV3d3cucG9zdG5ld3MtYmVmci5jb22CFXd3dy5wb3N0bmV3cy1iZW5sLmNvbYIcd3d3LnBvc3R0aXRyZXNkZXByZXNzZW5sLmNvbYIXd3d3LnByZXNhcm9tYW5lYXNjYS5jb22CE3d3dy5wcmVzc2V0aXRlbC5jb22CE3d3dy5wcmVzc3RpdGxlcy5jb22CF3d3dy5wcmVzc3RpdGxlc2ZsZXguY29tghZ3d3cucHJlc3N0aXRsZXNtYWcuY29tghd3d3cucHJlc3N0aXRsZXNuZXdzLmNvbYIbd3d3LnByZXNzdGl0bGVzbmV3c2luZm8uY29tghp3d3cucHJlc3N0aXRsZXNuZXdzd2ViLmNvbYIXd3d3LnByZXNzdGl0bGVzcG9zdC5jb22CGnd3dy5wcmVzc3RpdGxlc3pvbmUtdWsuY29tghd3d3cucHJlc3N0aXRsZXN6b25lLmNvbYIjd3d3LnByb21vc21haWxtYW50aXRyZXNkZXByZXNzZS5jb22CFnd3dy5yZXZpc3Rhc2JyYXppbC5jb22CF3d3dy5yZXZpc3Rhc25ld3MtYnIuY29tgiZ3d3cuc2Fub21hLWphYWlrYWthdXNsZWhkZXQtY2VudGVyLmNvbYIfd3d3LnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0LmNvbYIqd3d3LnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0ZW5zaW1tYWluZW4uY29tgiN3d3cuc2Fub21hLWphYWlrYWthdXNsZWhkZXRmbGV4LmNvbYIld3d3LnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0b25saW5lLmNvbYIqd3d3LnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0cGFpa2FsbGluZW4uY29tgiN3d3cuc2Fub21hLWphYWlrYWthdXNsZWhkZXRwb3N0LmNvbYIld3d3LnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0c2FsYW1hLmNvbYIkd3d3LnNhbm9tYS1qYWFpa2FrYXVzbGVoZGV0dHVvcmUuY29tgiN3d3cuc2Fub21hLWphYWlrYWthdXNsZWhkZXR1dXNpLmNvbYIVd3d3LnNhcHJlc3N0aXRsZXMuY29tgh53d3cuc2F1ZGlhcmFiaWFwcmVzc3RpdGxlcy5jb22CF3d3dy5zY2h3ZWl6ZXJwcmVzc2UuY29tghx3d3cuc2luZ2Fwb3JlcHJlc3N0aXRsZXMuY29tgiF3d3cuc2luZ2Fwb3JlcHJlc3N0aXRsZXNwbGFjZS5jb22CHXd3dy5zb3V0aGtvcmVhcHJlc3N0aXRsZXMuY29tghR3d3cuc3BvdG1lZGlhLXBsLmNvbYIVd3d3LnN0YW1wYW5ld3MtaXQuY29tghV3d3cuc3ZlcmlnZXRhY2tlci5jb22CHnd3dy5zd2lhdGdhemV0eWljemFzb3Bpc21hLmNvbYIYd3d3LnRhY2tlcm55aGV0ZXItc3cuY29tgih3d3cudGFnbGljaHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4uY29tgiR3d3cudGFnemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CFXd3dy50ZXN0ZWRvbWFpbnBsLmNvbYInd3d3LnRoZXplaXR1bmdlbnVuZHplaXRzY2hyaXRlbnpvbmUuY29tght3d3cudGlkbmluZ2FybnloZXRlci1zdy5jb22CJnd3dy50aWRuaW5nYXJvY2h0aWRza3JpZnRlci1jZW50ZXIuY29tgh93d3cudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXIuY29tgiR3d3cudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJibGl4dC5jb22CI3d3dy50aWRuaW5nYXJvY2h0aWRza3JpZnRlcmZsZXguY29tgiV3d3cudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJmb3JzdGEuY29tgiN3d3cudGlkbmluZ2Fyb2NodGlkc2tyaWZ0ZXJpZGFnLmNvbYIjd3d3LnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyaW5mby5jb22CInd3dy50aWRuaW5nYXJvY2h0aWRza3JpZnRlcm5ldC5jb22CIXd3dy50aWRuaW5nYXJvY2h0aWRza3JpZnRlcm55LmNvbYIjd3d3LnRpZG5pbmdhcm9jaHRpZHNrcmlmdGVycG9zdC5jb22CInd3dy50aWRuaW5nYXJvY2h0aWRza3JpZnRlcndlYi5jb22CHnd3dy50aWpkc2NocmlmdGVuZW5rcmFudGVuLmNvbYIRd3d3LnRpdGxlcy11ay5jb22CFnd3dy50aXRyZXNkZXByZXNzZS5jb22CH3d3dy50aXRyZXNkZXByZXNzZWJlbGdpdW1ubC5jb22CI3d3dy50aXRyZXNkZXByZXNzZWJlbGdpdW1ubGluZm8uY29tgiN3d3cudGl0cmVzZGVwcmVzc2ViZWxnaXVtbmxsaW5rLmNvbYIid3d3LnRpdHJlc2RlcHJlc3NlYmVsZ2l1bW5sbmV0LmNvbYIld3d3LnRpdHJlc2RlcHJlc3NlYmVsZ2l1bW5sb25saW5lLmNvbYIad3d3LnRpdHJlc2RlcHJlc3NlYmVubC5jb22CHHd3dy50aXRyZXNkZXByZXNzZWJlbmxocS5jb22CHnd3dy50aXRyZXNkZXByZXNzZWJlbmxpbmZvLmNvbYIed3d3LnRpdHJlc2RlcHJlc3NlYmVubGxpbmsuY29tgh53d3cudGl0cmVzZGVwcmVzc2ViZW5sbGlzdC5jb22CIHd3dy50aXRyZXNkZXByZXNzZWJlbmxvbmxpbmUuY29tgh53d3cudGl0cmVzZGVwcmVzc2ViZW5sc2l0ZS5jb22CG3d3dy50aXRyZXNkZXByZXNzZWNvdmVyLmNvbYIfd3d3LnRpdHJlc2RlcHJlc3NlZnItY2VudGVyLmNvbYIdd3d3LnRpdHJlc2RlcHJlc3NlZnItbWFpbC5jb22CH3d3dy50aXRyZXNkZXByZXNzZWZyLW9ubGluZS5jb22CHHd3dy50aXRyZXNkZXByZXNzZWZyLXdlYi5jb22CHnd3dy50aXRyZXNkZXByZXNzZWZyYWdlbmN5LmNvbYIbd3d3LnRpdHJlc2RlcHJlc3NlZnJuZXQuY29tgh53d3cudGl0cmVzZGVwcmVzc2Vmcm9ubGluZS5jb22CHHd3dy50aXRyZXNkZXByZXNzZWZycG9zdC5jb22CHHd3dy50aXRyZXNkZXByZXNzZWZyem9uZS5jb22CHXd3dy50aXRyZXNkZXByZXNzZWxpbmstbmwuY29tgh13d3cudGl0cmVzZGVwcmVzc2VsaXN0LW5sLmNvbYIZd3d3LnRpdHJlc2RlcHJlc3NlbWFnLmNvbYIdd3d3LnRpdHJlc2RlcHJlc3NlbWFpbC1mci5jb22CHHd3dy50aXRyZXNkZXByZXNzZW1haWxmci5jb22CH3d3dy50aXRyZXNkZXByZXNzZW5sLWNlbnRlci5jb22CHnd3dy50aXRyZXNkZXByZXNzZW5sYWdlbmN5LmNvbYIdd3d3LnRpdHJlc2RlcHJlc3Nlbmxjb3Zlci5jb22CHHd3dy50aXRyZXNkZXByZXNzZW5sbmV3cy5jb22CHnd3dy50aXRyZXNkZXByZXNzZW5sb25saW5lLmNvbYIcd3d3LnRpdHJlc2RlcHJlc3Nlbmxwb3N0LmNvbYIcd3d3LnRpdHJlc2RlcHJlc3NlbmxzaXRlLmNvbYIcd3d3LnRpdHJlc2RlcHJlc3Nlbmx6b25lLmNvbYIid3d3LnRvZGF5YXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIVd3d3LnRvZGF5bWVkaWEtZGUuY29tghF3d3cudHVya2Jhc2luLmNvbYIWd3d3LnVhZXByZXNzdGl0bGVzLmNvbYIWd3d3LnVrLW1lZGlhdGl0bGVzLmNvbYIUd3d3LnVrLXNwb3RtZWRpYS5jb22CFnd3dy51a2Nsb3VkY29udGVudC5jb22CFnd3dy51c2FwcmVzc3RpdGxlcy5jb22CGnd3dy52aWV0bmFtcHJlc3N0aXRsZXMuY29tghx3d3cud2VsY29tZWF2aXNlcm9nYmxhZGUuY29tgh13d3cud2VsY29tZWF2aXNlcm9nYmxhZGVyLmNvbYIfd3d3LndlbGNvbWVqb3JuYWlzZXJldmlzdGFzLmNvbYIfd3d3LndlbGNvbWVwb3J0YWRhc2RlcHJlbnNhLmNvbYIhd3d3LndlbGNvbWVwb3J0YWxlZGVsbGFzdGFtcGEuY29tghd3d3cud2VsY29tZXByZXNzLXVrLmNvbYIad3d3LndlbGNvbWVwcmVzc3RpdGxlcy5jb22CJnd3dy53ZWxjb21lc2Fub21hLWphYWlrYWthdXNsZWhkZXQuY29tgiZ3d3cud2VsY29tZXRpZG5pbmdhcm9jaHRpZHNrcmlmdGVyLmNvbYIdd3d3LndlbGNvbWV0aXRyZXNkZXByZXNzZS5jb22CKHd3dy53ZWxjb21lemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi5jb22CE3d3dy53b3JrbWVkaWFici5jb22CE3d3dy53b3JrbWVkaWFkZS5jb22CE3d3dy53b3JrbWVkaWFmaS5jb22CE3d3dy53b3JrbWVkaWFpdC5jb22CGHd3dy53b3JsZHByZXNzdGl0bGVzLmNvbYIYd3d3LndvcmxkcHJlc3N0aXRsZXMueHl6giN3d3cueWV6aGVkbmV2bnl5ZWdhemV0eXpodXJuYWx5LmNvbYIhd3d3LnlvdXJhdXN0cmFsaWFucHJlc3N0aXRsZXMuY29tgiJ3d3cueW91cmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgih3d3cuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi1jZW50ZXIuY29tgiR3d3cuemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbi1kZS5jb22CIXd3dy56ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIld3d3LnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW5pbmZvLmNvbYIkd3d3LnplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW5uZXQuY29tghZ3d3cuem9uZW1lZGlhLWJlZnIuY29tghZ3d3cuem9uZW1lZGlhLWJlbmwuY29tgh95ZXpoZWRuZXZueXllZ2F6ZXR5emh1cm5hbHkuY29tgh15b3VyYXVzdHJhbGlhbnByZXNzdGl0bGVzLmNvbYIeeW91cmtyYW50ZW5lbnRpamRzY2hyaWZ0ZW4uY29tgiR6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLWNlbnRlci5jb22CIHplaXR1bmdlbnVuZHplaXRzY2hyaWZ0ZW4tZGUuY29tgh16ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVuLmNvbYIhemVpdHVuZ2VudW5kemVpdHNjaHJpZnRlbmluZm8uY29tgiB6ZWl0dW5nZW51bmR6ZWl0c2NocmlmdGVubmV0LmNvbYISem9uZW1lZGlhLWJlZnIuY29tghJ6b25lbWVkaWEtYmVubC5jb20wDQYJKoZIhvcNAQELBQADggEBAFvMhJcEnO4FFZbL6r59ulVF9eFojyHYT+rMPd8ODOQL1eTH7PeqDgD2QjQTZXO6IJUdfqQPKnUNaPHQZIBV/cis03Z/0Smt4c8R4TJkKfnrNR0tKWrgPw6AZq7es8I/2XmyF+BOtnJ4FAR/vQRGo3SKk21oTeLIyfkRdx/OO8zU9qGzNDXcqa6uOTXJrNBJ2hwyXGLUAw2fQmeBBgBS+jm+/pbtV9/N96dyRUbm2fZxOfRNfzhRWEVoOBHbdk4tCIiqeBoZpTTY9kKX6t/QP+c9Tm9AymddVB10Qt39ql0AnZheKEDPos8UFXjH7RBqcFj/Lwy0YgNo8hLcekd6Cyo='
    really_long_text = really_long_text * 100
    max_recursion_depth_exceeded = False
    try:
        utlz.text_with_newlines(really_long_text, line_length=65)
    except RecursionError:
        max_recursion_depth_exceeded = True
    assert max_recursion_depth_exceeded is False


def test_func_has_arg():

    def func1(foo):
        pass

    class Class1(object):

        def __init__(self, bar):
            pass

    assert utlz.func_has_arg(func=func1, arg='foo') is True
    assert utlz.func_has_arg(func=func1, arg='bar') is False
    assert utlz.func_has_arg(func=Class1.__init__, arg='self') is True
    assert utlz.func_has_arg(func=Class1.__init__, arg='bar') is True
    assert utlz.func_has_arg(func=Class1.__init__, arg='baz') is False


def test_lazy_val():

    def func1(arg):
        func1.calls += 1
        return arg.attr + arg.attr
    func1.calls = 0

    class TestClass:

        lazy1 = utlz.lazy_val(lambda self: 'baz ' + str(self.attr),
                              with_del_hook=True)

        def __init__(self, arg):
            self.attr = arg

        @utlz.lazy_val
        def lazy2(self):
            return func1(self)

        @utlz.lazy_val
        def lazy3(self):
            return 'foo ' + str(self.attr)

    inst1 = TestClass(111)
    assert func1.calls == 0
    assert inst1.lazy2 == 222
    assert func1.calls == 1
    assert inst1.lazy2 == 222
    assert func1.calls == 1, 'func1.calls is still 1'
    assert inst1.lazy3 == 'foo 111'
    assert inst1.lazy1 == 'baz 111'
    inst2 = TestClass(333)
    assert inst2.lazy1 == 'baz 333'

    # test_lazy_val: del_hook()

    for i in range(10):
        instances = []
        for j in range(10):
            inst = TestClass(random.randint(0, 1000))
            assert inst.lazy1 == flo('baz {inst.attr}')
            assert inst.lazy2 == inst.attr * 2
            assert inst.lazy3 == flo('foo {inst.attr}')
            instances.append(inst)
        for inst in instances:
            assert inst.lazy1 == flo('baz {inst.attr}')
            assert inst.lazy2 == inst.attr * 2
            assert inst.lazy3 == flo('foo {inst.attr}')


def test_namedtuple():
    SimpleTuple = utlz.namedtuple(
        typename='SimpleTuple',
        field_names='foo, bar, baz'
    )
    st1 = SimpleTuple(1, 2, 3)
    assert st1.foo == 1 and st1.bar == 2 and st1.baz == 3
    assert st1[0] == 1 and st1[1] == 2 and st1[2] == 3
    st2 = SimpleTuple(baz='ccc', bar='bbb', foo='aaa')
    assert st2.foo == 'aaa' and st2.bar == 'bbb' and st2.baz == 'ccc'

    WithDefaults = utlz.namedtuple(
        typename='WithDefaults',
        field_names='foo, bar=222, baz=None, bla="hihi"'
    )
    wd1 = WithDefaults('hoho')
    assert str(wd1) == "WithDefaults(foo='hoho', bar=222, baz=None, bla='hihi')"
    wd2 = WithDefaults(baz=True, foo='111')
    assert wd2.baz is True and wd2[0] == '111'

    WithLazyVals = utlz.namedtuple(
        typename='WithLazyVals',
        field_names='foo, bar=22',
        lazy_vals={
            'foo_upper': lambda self: self.foo.upper(),
            'bar_as_str': lambda self: str(self.bar),
        }
    )
    wlv1 = WithLazyVals('Hello, World!')
    assert wlv1.bar_as_str == '22'
    assert wlv1.foo_upper == 'HELLO, WORLD!'
    wlv2 = WithLazyVals('asdf')
    assert wlv2.foo_upper == 'ASDF'


def test_namedtuple_lazy_val():
    tail_a = str(random.randint(0, 100))
    tail_b = str(random.randint(0, 100))
    tail_c = str(random.randint(0, 100))
    Tuple = utlz.namedtuple(
        typename='Tuple',
        field_names=[
            'a',
            'b',
            'c',
            'd',
            'e',
        ],
        lazy_vals={
            'a_lazy': lambda self: self.a + tail_a,
            'b_lazy': lambda self: self.b + tail_b,
            'c_lazy': lambda self: bytes(self.c + tail_c, 'utf-8'),
            'd_lazy': lambda self: hashlib.sha256(bytes(self.d,
                                                        'utf-8')).digest(),
            'e_lazy': lambda self: [i+123 for i in self.e],
        }
    )
    for i in range(10):
        tupels = []
        for j in range(10):
            tup = Tuple(
                a=str(random.randint(0, 1000)),
                b=str(random.randint(0, 1000)),
                c=str(random.randint(0, 1000)),
                d=str(random.randint(0, 1000)),
                e=[1, 2, 3, random.randint(0, 1000)],
            )
            assert tup.a + tail_a == tup.a_lazy
            assert tup.b + tail_b == tup.b_lazy
            try:
                assert bytes(tup.c + tail_c, 'utf-8') == tup.c_lazy
                assert hashlib.sha256(bytes(tup.d,
                                            'utf-8')).digest() == tup.d_lazy
            except TypeError:
                # python 2.x
                # in python 2.x bytes == str, and accepts exactly one argument
                pass
            assert [i+123 for i in tup.e] == tup.e_lazy
            tupels.append(tup)
        for tup in tupels:
            assert tup.a + tail_a == tup.a_lazy
            assert tup.b + tail_b == tup.b_lazy
            try:
                assert bytes(tup.c + tail_c, 'utf-8') == tup.c_lazy
                assert hashlib.sha256(bytes(tup.d,
                                            'utf-8')).digest() == tup.d_lazy
            except TypeError:
                # python 2.x
                # in python 2.x bytes == str, and accepts exactly one argument
                pass
            assert [i+123 for i in tup.e] == tup.e_lazy


def test_query_yes_no():
    utlz._get_input = lambda: 'yes'
    assert utlz.query_yes_no(question='Is this true?', default='no') is True

    utlz._get_input = lambda: 'no'
    assert utlz.query_yes_no('Is this true?', default='no') is False


def test_query_input():
    utlz._get_input = lambda: 'foo'
    assert utlz.query_input(question='Enter something') is 'foo'

    utlz._get_input = lambda: 'bar'
    assert utlz.query_input('Enter something') is 'bar'
